<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[MOZZI]]></title>
  <link href="http://sensorium.github.io/Mozzi//atom.xml" rel="self"/>
  <link href="http://sensorium.github.io/Mozzi//"/>
  <updated>2014-03-13T14:09:29+11:00</updated>
  <id>http://sensorium.github.io/Mozzi//</id>
  <author>
    <name><![CDATA[Tim Barrass]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Making Things Purr, Growl and Sing - Mozzi workshop in Melbourne]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2014/03/06/making-things-purr/"/>
    <updated>2014-03-06T17:50:00+11:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2014/03/06/making-things-purr</id>
    <content type="html"><![CDATA[<p>We will be running a Mozzi synth workshop in Melbourne on Thursday 20th March, 14:00-20:00.</p>

<p>Participants will get a grip on Mozzi, and have a chance to work on their own projects, with help from me (Tim, the creator of Mozzi) and my brother Stephen Barrass (a media arts researcher and teacher).</p>

<p>Location: Kindred Studios, 212A Whitehall St, Yarraville</p>

<p>Limit of 10 Participants</p>

<p>Cost $90 ­ includes <a href="https://mozzi.sharetribe.com/en/listings/38888-mozzi-noob-kits">Mozzi Noob kit</a></p>

<p>Register via <a href="https://mozzi.sharetribe.com/en/listings/42804-mozzi-arduino-synth-workshop--melbourne">Sharetribe</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mozzi Marketplace on Sharetribe]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/12/31/mozzi-marketplace-on-sharetribe/"/>
    <updated>2013-12-31T19:22:00+11:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/12/31/mozzi-marketplace-on-sharetribe</id>
    <content type="html"><![CDATA[<p>We (well, me and my brother Steph) are experimenting with the idea of a Mozzi marketplace where people can sell or swap things made with Mozzi.  The first test is with <a href="https://mozzi.sharetribe.com">Sharetribe</a>.</p>

<p>We hope a marketplace will help ferment the Mozzi culture, but also there&#8217;s a remote thought of generating some kind of income to support the development of Mozzi.</p>

<p>First up is the <a href="https://mozzi.sharetribe.com/en/listings/38888-mozzi-noob-kits">Mozzi Noob Kit</a> with everything you need to do the Mozzi Introductory Tutorial.</p>

<p>Anyone can post a listing on the Mozzi marketplace.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Simpler adc with mozziAnalogRead]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/08/25/simpler-adc-with-mozzianalogread/"/>
    <updated>2013-08-25T21:20:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/08/25/simpler-adc-with-mozzianalogread</id>
    <content type="html"><![CDATA[<p>Version 2013-08-25 evolves the adc developments of the previous release, by
replacing the various ways of reading analog inputs (adcGetResult(),
adcReadAllChannels(), etc.) with mozziAnalogRead(). Use it the same as
analogRead(). It doesn&#8217;t need any special setup.</p>

<p>Audio input still uses getAudioInput(), not mozziAnalogRead().</p>

<p>Here&#8217;s the Mozzi/extras/NEWS.txt entry of the changes in this release:</p>

<p>version 2013-08-25-18:38</p>

<ul>
<li>mozzi_analog.h - Much simpler, better analog input.  Now there&#8217;s just mozziAnalogRead(pin).
  Sorry about breaking your sketches, again.
  mozziAnalogRead completely replaces the arduino analogRead, and analogRead is no longer able to be used with Mozzi.
  No setup is required for mozziAnalogRead, unless you want audio input, which is set in mozzi_config.h as before.
  You can still use setupFastAnalogRead(speed) if you want faster than mozzi&#8217;s default,
  which is automatically set if you don&#8217;t do anything.  See the documentation if you want this.
  If you specially need analogRead for some reason (and you&#8217;re not using audio input), you can comment out a
  line in MozziGuts.cpp, in the startMozzi function, where it says setupMozziADC().</li>
<li>All example sketches using analog reads are updated, or removed where no longer relevant.</li>
<li>examples/04.Analog_Input changed to 04.Audio_Input</li>
<li>examples/envelopes/ADSR_Envelope - now plays random envelopes as a more thorough test/demo.</li>
<li>add examples/envelopes/ADSR_Envelope_x2 - shows an additive sound combining 2 oscillators with individual envelopes.</li>
<li>Sample.h - added linear interpolation as optional template parameter, eg.:
  Sample &lt;SAMPLE_NUM_CELLS, AUDIO_RATE, INTERP_LINEAR> aSample(SAMPLE_DATA);
  The default parameter is INTERP_NONE.</li>
<li>removed examples/08.Samples/Sample_Offset too horrible</li>
<li>added examples/08.Samples/Sample_Scrub&#8230;uses interpolation/smoothing at different scales</li>
<li>Smooth.h - added operator method as an alternative to next() so you can use
  mySmooth(input-value) instead of mySmooth.next(input-value), if you want.</li>
<li>mozzi_midi.h, .cpp - changed return type from unsigned int to int for mtof(unsigned char midi_note), mtof(int midi_note),
  to suit Oscil::setFreq()</li>
<li>added/corrected references to examples in docs</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Upcoming Mozzi talk at ICMC2013 in Perth]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/08/06/upcoming-mozzi-talk-at-icmc2013-in-perth/"/>
    <updated>2013-08-06T17:34:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/08/06/upcoming-mozzi-talk-at-icmc2013-in-perth</id>
    <content type="html"><![CDATA[<p>There&#8217;ll be a conference presentation about Mozzi as part of <a href="http://icmc2013.com.au/program/">ICMC</a> in Perth.
The paper will be on Thursday 15 August, 14:15 – 16:15, State Theatre Centre – Studio Underground.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Audio and Control ADC together]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/07/29/audio-and-control-adc-together/"/>
    <updated>2013-07-29T18:24:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/07/29/audio-and-control-adc-together</id>
    <content type="html"><![CDATA[<p>Version 2013-07-29-18:09 enables audio and control rate analog inputs to work at the same time.
Audio input is on analog pin A0.  Each time an audio sample is output, the audio input is sampled.
For each audio input sample, one control input is also converted, by changing the input channel and
triggering two conversions in a row using the ADC interrupt, keeping the second reading because the first
is unreliable, then switching the channel back to 0 again for audio input and starting another audio conversion, which
is also discarded.  Then the cycle goes again with the next audio output triggering a second, usable, audio input sample.
Each time, one control input is stored, until the list of analog channels waiting to be sampled is empty.
The audio samples continue alone until the next control interrupt, when a sketch has adcReadAllChannels() in updateControl().</p>

<p>You can test it with examples/04.Analog_Input/Audio_and_Control_Input and examples/04.Analog_Input/Audio_Input_with_Knob_Filter.</p>

<p>Also, now the Mozzi library downloads as Mozzi.zip and unzips as Mozzi, instead of sensorium-Mozzi-r4783rth43t or whatever.</p>

<p>The NEWS.txt entry for this release is:</p>

<ul>
<li>IMPORTANT: renamed RecentAverage.h to RollingAverage.h.  Update sketches accordingly.</li>
<li>mozzi_analog.h

<ul>
<li>added the ability to sample audio and control rate analog inputs at the same time</li>
<li>added options for setupFastAnalogRead(), default is FAST (adc clock div main clock by 16, same as previously),
  and setupFastAnalogRead(FASTER) and FASTEST for divide by 8 and divide by 4.  These faster rates risk being less accurate
(see docs for setupFastAnalogRead), but FASTER (or FASTEST) is required for audio input with control inputs at the same time.</li>
</ul>
</li>
<li>added examples/04.Analog_Input/Audio_and_Control_Input</li>
<li>added examples/04.Analog_Input/Audio_Input_with_Knob_Filter</li>
<li>removed examples/04.Analog_Input/Audio_Input_with_Filter_Control</li>
<li>RollingAverage.h - change unsigned char index to unsigned int and same for num_readings_as_rshift, so more than 255 items can be averaged</li>
<li>added audioTicks(), returns how many audio samples have been played since the program started - this will overflow less often than mozziMicros().</li>
<li>mozziMicros() was wrong, audioticks/us-per-tick&#8230; fixed, now audioticks*us-per-tick</li>
<li>added Stack.h, a simple stack class used internally for reading analog control inputs via adcReadAllChannels().</li>
<li>added RollingStat.h, which calculates an approximation of the variance and standard deviation for a window of recent inputs,
  for doing things with sensor inputs.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ICAD2013 workshop announcement]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/05/14/icad2013-workshop-announcement/"/>
    <updated>2013-05-14T18:33:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/05/14/icad2013-workshop-announcement</id>
    <content type="html"><![CDATA[<p>Mozzi workshop at <a href="http://icad2013.com/index.php?action=workshops">International Conference on Auditory Display</a>, July 6-10, 2013, Lodz University of Technology, Poland.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Music Hack Day Barcelona workshop announcement]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/05/13/music-hack-day-barcelona-workshop-announcement/"/>
    <updated>2013-05-13T18:27:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/05/13/music-hack-day-barcelona-workshop-announcement</id>
    <content type="html"><![CDATA[<p>Mozzi workshop at <a href="http://bcn.musichackday.org/2013/index.php?page=Main+page">Music Hack Day</a>, 13-14 June 2013, Barcelona.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[ISEA2013 workshop announcement]]></title>
    <link href="http://sensorium.github.io/Mozzi//blog/2013/04/11/isea2013-workshop-announcement/"/>
    <updated>2013-04-11T18:09:00+10:00</updated>
    <id>http://sensorium.github.io/Mozzi//blog/2013/04/11/isea2013-workshop-announcement</id>
    <content type="html"><![CDATA[<p><img class="left" src="http://sensorium.github.io/Mozzi//images/mozzi_poster_tiny.png" title="Mozzi poster" >
Mozzi workshop at <a href="http://www.isea2013.org/event-category/workshops/">international Symposium on Electonic Art</a>, June 8-9, 2013 in Sydney.<br/>
Through guided making, participants will learn to use Mozzi and Arduino to combine sensors with synthesis
to make complex, reactive sounds. By the end of the workshop everyone will have created and customised
their own responsive sound-generating objects.
More details and registration: <a href="http://www.isea2013.org/event-category/workshops/">ISEA2013</a></p>
]]></content>
  </entry>
  
</feed>
