AutoGen Definitions dummy;
class = {
  cp-id     = 'class_a_d_s_r';
  cp-name   = 'ADSR';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1ab22c9416a8073d7674ea890a75f97b15';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADSR';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a5ffeb0baf5e308515ca36cb7af802c31';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'update';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Updates the internal controls of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
            Call this in updateControl().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1aef63b6554045bd61f77d028ad76f1730';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '154';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Advances one audio step along the ADSR and returns the level.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Call this in updateAudio().
@return the next value, as an unsigned int.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a52091df7bf95f9e34fb51d9707547092';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'noteOn';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Start the attack phase of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  THis will restart the ADSR no matter what phase it is up to.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1af6cac55fb97760fffc885507f5d969d2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'noteOff';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '174';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Start the release phase of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 2.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1aa7fe43c0a91006b5f72013bb5b25fcbb';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAttackLevel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '186';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the attack level of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value the attack level.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a152312b577df53f02cf92cf4d3b3a4e2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDecayLevel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '197';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the decay level of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value the decay level.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a9f81971a62aa3abb66245b7ef25ae3c2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSustainLevel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '208';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the sustain level of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param value the sustain level.  Usually the same as the decay level, 
for a steady sustained note.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1aa577c32f8758e1ecda44b4410c1c103d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setReleaseLevel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '218';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the release level of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Normally you'd make this 0, 
but you have the option of some other value.
@param value the release level (normally 0).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1abfb4aaa169920beadb67570e0360f23f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setADLevels';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attack';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'decay';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '231';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the attack and decay levels of the ADSR.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  This assumes a conventional 
ADSR where the sustain continues at the same level as the decay, till the release ramps to 0.
@param attack the new attack level.
@param value the new sustain level.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1ac8e63a0de672b4a91e2123bead6a465b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAttackTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '250';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the attack time of the ADSR in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The actual time taken will be resolved within the resolution of CONTROL_RATE.
@param value the unsigned int attack time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a1ef68b47f7cdafeab75f0142834e3473';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDecayTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '261';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the decay time of the ADSR in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The actual time taken will be resolved within the resolution of CONTROL_RATE.
@param value the unsigned int decay time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a5c79838b081aba5a396aa9ea26394051';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSustainTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '273';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the sustain time of the ADSR in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The actual time taken will be resolved within the resolution of CONTROL_RATE.
The sustain phase will finish if the ADSR recieves a noteOff().
@param value the unsigned int sustain time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1ab76efe021a258b65da9bc5ec85da2f34';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setReleaseTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '285';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the release time of the ADSR in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The actual time taken will be resolved within the resolution of CONTROL_RATE.
@param value the unsigned int release time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1af656b88fdfddd521c3a30fe9b06b524b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTimes';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attack_ms';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'decay_ms';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'sustain_ms';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'release_ms';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '300';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the attack, decay and release times of the ADSR in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The actual times will be resolved within the resolution of CONTROL_RATE.
@param attack_ms the new attack time in milliseconds.
@param decay_ms the new decay time in milliseconds.
@param decay_ms the new sustain time in milliseconds.
@param release_ms the new release time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-type';
    sec-member = {
      sec-mem-kind = 'enum';
      sec-mem-id   = 'class_a_d_s_r_1af20b17d93e521178a92a89aba778bc77';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-name = '@0';
      sec-mem-enum = { enum-name = ATTACK; };
      sec-mem-enum = { enum-name = DECAY; };
      sec-mem-enum = { enum-name = SUSTAIN; };
      sec-mem-enum = { enum-name = RELEASE; };
      sec-mem-enum = { enum-name = IDLE; };
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a69cd9a406d29eecf8e517b7bfcbfd378';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convertMsecToControlSteps';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1ae6c6c58a2d22b175bce615e26acaecc8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhase';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
phase *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'next_phase';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1aefd40ae043e5bafa891c9a10f8df1081';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'checkForAndSetNextPhase';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
phase *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'next_phase';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '83';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1a8e3fbff4d3fe7b5fbc2d3351b4a4c549';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'checkForAndSetIdle';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '91';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_a_d_s_r_1acfa8f339a2dacfd08382d4a53ef6b511';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
phase *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'p';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '101';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1a9b4fffa69c5f104577cb705fb67861c7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AUDIO_TICKS_PER_CONTROL';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1af2cd1e85749f173197b5b02b62bb1fdc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_control_step_counter';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1a48defbef9bd24697ddaec550ada983c4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_num_control_steps';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1aad9f8974dfaa6cd4e25713afc0c7a850';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct ADSR::phase
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'attack';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1af2ad3f5ccd0bf17fb4fc201cdf6f6439';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct ADSR::phase
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'decay';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1a418c2bc62c7d8e3c4ad830bbba64dd85';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct ADSR::phase
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'sustain';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1a46ddc40079de0a95d8c75633a7fa63cb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct ADSR::phase
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'release';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1a4062fd8807f1725bcbd655d58bf11490';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct ADSR::phase
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'idle';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '60';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1aa28d1d84420f6d5d25c1d31e94a4105e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
phase *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_phase';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_a_d_s_r_1aa2ad24aba1df10595a1a1e9a19e51906';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Line< unsigned long >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'transition';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '65';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
  cp-fileline  = '44';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A simple ADSR envelope generator.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 1.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_audio_delay';
  cp-name   = 'AudioDelay';
  cp-ref     = {
    ref-type = derived;
    ref-id   = 'class_control_delay';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a688f69088f96bf3976a8555d3026365f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AudioDelay';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a79be253fcb5709624c8fb708e54f069f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AudioDelay';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '61';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param delaytime_cells delay time expressed in cells.  
For example, 128 cells delay at AUDIO_RATE would produce a time delay of 128/16384 = 0.0078125 s = 7.8 ms
Put another way, num_cells = delay_seconds * AUDIO_RATE.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a19258636609d83a2bab11849e17b5294';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in_value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Input a value to the delay and retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in_value the signal input.
@param delaytime_cells sets the delay time in terms of cells in the delay buffer.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a41c09b5cc9e817d8eaf111b0f74c9a0b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Input a value to the delay and retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in_value the signal input.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a7bd0a07f7803afda1a71b50e3f66827b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the delay time, measured in cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param delaytime_cells how many cells to delay the input signal by.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a26b409fbfc322ae527ba23680c56e3a9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
It doesn't change the stored internal value of _delaytime_cells.
@param delaytime_cells indicates the delay time in terms of cells in the delay buffer.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_audio_delay_1a3fd1c7e4e73da67eacae5b096f2ff846';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'delay_array';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '44';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_audio_delay_1a6ddfbcae569599a495e4251dbce111ac';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_write_pos';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_audio_delay_1a6d709c3c6ebfb94b7b60de725fd51210';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_delaytime_cells';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '46';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
  cp-fileline  = '40';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Audio delay line for comb filter, flange, chorus and short echo effects.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@tparam  NUM_BUFFER_SAMPLES is the length of the delay buffer in samples.  This should
be a power of two. The largest delay you'll fit in an atmega328 will be 512
cells, which at 16384 Hz sample rate is 31 milliseconds. More of a flanger or a
doubler than an echo. The amount of memory available for delays on other chips will vary.
AudioDelay() doesn't have feedback.  If you want feedback, use AudioDelayFeedback().
@tparam the type of numbers to use for the signal in the delay.  The default is char, but int could be useful
when adding manual feedback.  When using int, the input should be limited to 15 bits width, ie. -16384 to 16383.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 3;
        node-label = 'ControlDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_control_delay';
        };
        node-child = {
          child-id = '2';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 2;
        node-label = 'AudioDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_audio_delay';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_auto_range';
  cp-name   = 'AutoRange';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_auto_range_1a2f0638f4d8e2937080b67fc0614c8d6d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AutoRange';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'min_expected';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'max_expected';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      sec-mem-desc-line = '38';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@tparam T the type of numbers to to use, eg. int, unsigned int, float etc.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_auto_range_1aaa997faf0bedd3d7464b8ca547340f6e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'n';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      sec-mem-desc-line = '45';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Updates and returns the current range.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param n the next value to include in the range.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_auto_range_1a36c0d43eee212d99c0b8aa25d9d534d4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'else';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
{
    if (n< range_min) {
      range_min = n;
      range = range_max - range_min;
    }
  }
  return range
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
  cp-fileline  = '32';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Keeps a running calculation of the range of the input values it receives.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_control_delay';
  cp-name   = 'ControlDelay';
  cp-ref     = {
    ref-type = base;
    ref-id   = 'class_audio_delay';
    ref-prot = public;
    ref-virt = non-virtual;
  };
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a19258636609d83a2bab11849e17b5294';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in_value';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '71';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Input a value to the delay and retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in_value the signal input.
@param delaytime_cells sets the delay time in terms of cells in the delay buffer.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a41c09b5cc9e817d8eaf111b0f74c9a0b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in_value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Input a value to the delay and retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in_value the signal input.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a7bd0a07f7803afda1a71b50e3f66827b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the delay time, measured in cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param delaytime_cells how many cells to delay the input signal by.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_audio_delay_1a26b409fbfc322ae527ba23680c56e3a9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'read';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delaytime_cells';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Retrieve the signal in the delay line at the position delaytime_cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
It doesn't change the stored internal value of _delaytime_cells.
@param delaytime_cells indicates the delay time in terms of cells in the delay buffer.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ControlDelay.h';
  cp-fileline  = '40';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Control-rate delay line for delaying control signals.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
For example, this could be used to produce echo-like effects using multiple
instances of the same voice, when AudioDelay would be too short for an actual
audio echo.  This is in fact just a wrapper of the AudioDelay code.
@tparam  NUM_BUFFER_SAMPLES is the length of the delay buffer in samples.  This should
be a power of two.
@tparam the type of numbers to use for the signal in the delay.  The default is char, but int could be useful
when adding manual feedback.  When using int, the input should be limited to 15 bits width, ie. -16384 to 16383.
_EnD_oF_dEf_TeXt_;
  cp-inheritancegraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 7;
        node-label = 'ControlDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_control_delay';
        };
        node-child = {
          child-id = '8';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 8;
        node-label = 'AudioDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_audio_delay';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
  cp-collaborationgraph = <<_EnD_oF_dEf_TeXt_
      node = {
        node-id    = 9;
        node-label = 'ControlDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_control_delay';
        };
        node-child = {
          child-id = '10';
          relation = public-inheritance;
        }; /* node-child */
      }; /* node */
      node = {
        node-id    = 10;
        node-label = 'AudioDelay< NUM_BUFFER_SAMPLES, T >';
        node-link = {
          node-link-id = 'class_audio_delay';
        };
      }; /* node */

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_d_cfilter';
  cp-name   = 'DCfilter';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_d_cfilter_1ab55e871fc9d11dfb9231e44627181c2c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'DCfilter';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'pole';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Instantiate a DC-blocking filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param pole sets the responsiveness of the filter, 
how long it takes to settle to 0 if the input signal levels out at a constant value.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_d_cfilter_1ae900f943d9520fbf3a522508231d82b0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '77';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Filter the incoming value and return the result.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param x the value to filter
@return filtered signal
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_d_cfilter_1af47f9559c6be8150e4f998736765de8e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'acc';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '88';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_d_cfilter_1ad891837aa17411733cdb4fa415d3a7d9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prev_x';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_d_cfilter_1a3c725fa98a09bab8268caf583a017cbe';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'prev_y';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_d_cfilter_1a3a1fc4a2b05d052970f88aabc980411d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'A';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
      sec-mem-desc-line = '89';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
  cp-fileline  = '41';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A DC-blocking filter useful for highlighting changes in control signals.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
The output of the filter settles to 0 if the incoming signal stays constant.  If the input changes, the
filter output swings to track the change and eventually settles back to 0.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_ead';
  cp-name   = 'Ead';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a4862282805c2ac3255a34a99a31564d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Ead';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'update_rate';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param update_rate
Usually this will be CONTROL_RATE or AUDIO_RATE, unless you
design another scheme for updating. One such alternative scheme could take turns
for various control changes in a rotating schedule to spread out calculations
made in successive updateControl() routines. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a6bae0e92e6709c3fcd31fccd41212bac';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setAttack';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attack_ms';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the attack time in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param attack_ms The time taken for values returned by successive calls of
the next() method to change from 0 to 255.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1aa99e6dc2d5448b4de0764c6208e5c2fc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setDecay';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'decay_ms';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the decay time in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param decay_ms The time taken for values returned by successive calls of
the next() method to change from 255 to 0. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1af203c82721ab832c653a23ff219c040e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attack_ms';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'decay_ms';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set attack and decay times in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param attack_ms The time taken for values returned by successive calls of
the next() method to change from 0 to 255.
@param decay_ms The time taken for values returned by successive calls of
the next() method to change from 255 to 0.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1ac385679b58e2f9755029b7da7405b233';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Start the envelope from the beginning.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be used at any
time, even if the previous envelope is not finished. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a146b205e70f4b2293e643ea063f2b38f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'attack_ms';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'decay_ms';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
Set attack and decay times in milliseconds, and start the envelope from
@endverbatim
the beginning.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be used at any time, even if the previous envelope
is not finished. 
@param attack_ms The time taken for values returned by successive calls of
the next() method to change from 0 to 255.
@param decay_ms The time taken for values returned by successive calls of
the next() method to change from 255 to 0.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a32d3e3cf3848e4dbab6a3b2030d7e4ba';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate and return the next envelope value, in the range -128 to 127.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@note Timing: 5us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a535468e5725cb7eb51de99ec4c33918d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'millisToOneMinusRealPole';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'milliseconds';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_ead_1a158af5b24a40fb9be20a6d30a86656ca';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'expm1';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'x';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '164';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_ead_1a3448b12f697ea825eb57c85a0d74229b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Q8n8attack';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_ead_1ae5b8a9094eb6873ce0ea3b288191e0b7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Q8n8decay';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '147';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_ead_1ac0061fed27169314b910e1cf27246198';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Q8n24state';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_ead_1ababe7d4a8e5d6811909ce29714e3c12d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'attack_phase';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '149';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_ead_1aa7095eeabebc761de4f38e8c0309936e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'UPDATE_RATE';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
      sec-mem-desc-line = '150';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
  cp-fileline  = '41';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Exponential attack decay envelope.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 This produces a natural sounding
envelope. It calculates a new value each time next() is called, which can be
mapped to other parameters to change the amplitude or timbre of a sound.
@note Currently doesn't work at audio rate... may need larger number 
types for Q8n8attack and Q8n8decay ?
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_event_delay';
  cp-name   = 'EventDelay';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_event_delay_1a2bbfe6ab34ffb17c2600ef1b14d84c9f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'EventDelay';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '42';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Declare an EventDelay object with UPDATE_RATE template parameter.
UPDATE_RATE is how frequently you'll check if the EventDelay is ready().
This would be CONTROL_RATE if ready() is used simply in updateControl().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_event_delay_1adb1ea3351d63b51c6c5270eff1de4cb8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delay_milliseconds';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the delay time.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  This setting is persistent, until you change it by using set() again.
@param delay_milliseconds delay time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_event_delay_1aa2a731ceb05f95cac1798089448c6aed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '63';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Start the delay.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
\xrefitem todo 3.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_event_delay_1a85de9021676dadaba68edd6c5d5afa0e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'delay_milliseconds';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the delay time and start the delay.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param delay_milliseconds delay time in milliseconds.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_event_delay_1a723a61a4670ffed732b1d8eb9e5bfd56';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ready';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call this in updateControl() or updateAudio() to check if the delay time is up.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return true if the time is up.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_event_delay_1a6508f6b09a2c07cf2ef7c6fab04caedf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'counter';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '92';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_event_delay_1a8360d679692cbb55690281e7ba0b82de';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'counter_start_value';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '93';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_event_delay_1a05989fa99dafe77df2d3e74f01793c86';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'micros_per_update';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
      sec-mem-desc-line = '94';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
  cp-fileline  = '34';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A non-blocking replacement for Arduino's delay() function (which is disabled by Mozzi).
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 EventDelay can be
set() to wait for a number of milliseconds, then after calling start(), calling ready() will return true when the time is up.
@tparam update_rate is how frequently you'll check if the EventDelay is ready().
This would be CONTROL_RATE if ready() is used simply in updateControl().
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_line';
  cp-name   = 'Line';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_line_1aa6a80df90da15782ca88889ef9c8dd51';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Line';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Use the template parameter to set the type of numbers you
want to use. For example, Line \<int\> myline; makes a Line which uses ints.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_line_1a413f620b2824c6996b3346ee54351849';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments one step along the line.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return the next value.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_line_1a6bad32d527e0d931c99e9b72c2a75c80';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '84';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the current value of the line.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The Line will continue incrementing from this
value using any previously calculated step size.
@param value the number to set the Line's current_value to.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_line_1a7378d526cf07c42c0792868c749dee6e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'targetvalue';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'num_steps';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
Given a target value and the number of steps to take on the way, this calculates
@endverbatim
the step size needed to get there from the current value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param targetvalue the value to move towards.
@param num_steps how many steps to take to reach the target.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_line_1a24ad85c17562e97b6823a010a5ba04c6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'startvalue';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'targetvalue';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'num_steps';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
Given a new starting value, target value and the number of steps to take on the way,
@endverbatim
this sets the step size needed to get there.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param startvalue the number to set the Line's current_value to.
@param targetvalue the value to move towards.
@param num_steps how many steps to take to reach the target.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_line_1ab17731c709036da431529ccb92a9a2cd';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_value';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '52';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_line_1af7ce5d6d1cf84f0c95881f6fb5b6ec63';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'step_size';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
  cp-fileline  = '50';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
For linear changes with a minimum of calculation at each step.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 For instance,
you can use Line to make an oscillator glide from one frequency to another,
pre-calculating the required phase increments for each end and then letting your
Line change the phase increment with only a simple addition at each step.
@tparam T the type of numbers to use. For example, Line \<int\> myline; makes a
Line which uses ints. 
@note Watch out for underflows in the internal calcualtion of Line() if you're not
using floats (but on the other hand try to avoid lots of floats, they're too slow!). 
If it seems like the Line() is not working, there's a good chance you need to
scale up the numbers you're using, so internal calculations don't get truncated
away. Use Mozzi's fixed-point number types in mozzi_fixmath.h, which enable you to
represent fractional numbers. Google "fixed point arithmetic" if this is new to
you.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_low_pass_filter';
  cp-name   = 'LowPassFilter';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1a6d6538d3dfe603cce18711c990b85a03';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'LowPassFilter';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1ad7958bf53ac1c24b5653861ed521ed14';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCutoffFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'cutoff';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '64';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the cut off frequency,.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param cutoff use the range 0-255 to represent 0-8192 Hz (AUDIO_RATE/2).
Be careful of distortion at the lower end, especially with high resonance.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1aa804e9162a1b855380c6f48d00de2c32';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setResonance';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resonance';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '74';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the resonance.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  If you hear unwanted distortion, back off the resonance.
@param resonance in the range 0-255.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1a393f154ec729419747c5dd630327b852';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '86';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in the signal input.
@return the signal output.
@note Timing: about 11us.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1a2c1529187f45e0637418d52098f8a3c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ucfxmul';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'a';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'b';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '112';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1a82148798fb2d4f37ec36359504ccec62';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ifxmul';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'a';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'b';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '119';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_low_pass_filter_1ab5c6c75b7530586c1c1351ace5d0a3a5';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'fxmul';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'a';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'b';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '126';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_low_pass_filter_1ad6a60dc917dca9e2efafeab24b7d5b44';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'q';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_low_pass_filter_1a0f0dd2ea37ab46022bca52c16fe62d37';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'f';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_low_pass_filter_1a8ec944fbadfdf6fc6881fa36f5dd20c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'fb';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_low_pass_filter_1ae58d65eb2cf8f82b9145b2f6c3191397';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf0';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_low_pass_filter_1a363fa0a81b6c4d8f89debd16cbded1f0';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'buf1';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
  cp-fileline  = '49';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A resonant low pass filter for audio signals.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_oscil';
  cp-name   = 'Oscil';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1ac43b3d870a5c6da90cafa9d678829593';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Oscil';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TABLE_NAME';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param TABLE_NAME the name of the array the Oscil will be using. This
can be found in the table ".h" file if you are using a table made for
Mozzi by the char2mozzi.py python script in Mozzi's python
folder. 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1ab7dc5f97742d841fff6a4dca6d7242f3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Oscil';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Declare an Oscil with template TABLE_NUM_CELLS and UPDATE_RATE
parameters, without specifying a particular wave table for it to play.
The table can be set or changed on the fly with setTable(). Any tables
used by the Oscil must be the same size.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a2a76960954a19c7b24dfb7524b740c8f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
Updates the phase according to the current frequency
@endverbatim
and returns the sample at the new phase position.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return the next sample.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a59e9b132ad0770030d7339c6aa260925';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTable';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TABLE_NAME';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Change the sound table which will be played by the Oscil.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param TABLE_NAME is the name of the array in the table ".h" file you're using.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1ab7b740eec56740426a47508562ed4dd5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhase';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phase';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the phase of the Oscil.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  This does the same thing as Sample::start(offset).  Just different ways of thinking about oscillators and samples.
@param phase a position in the wavetable.
\xrefitem todo 12.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1afc77bfc5a1ad5926ad8df37725d480d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhaseFractional';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phase';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the phase of the Oscil.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Might be useful with getPhaseFractional().
@param phase a position in the wavetable.
\xrefitem todo 13.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1aa774ef68b06f9652e6ac23d4e9332554';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'getPhaseFractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '156';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Get the phase of the Oscil in fractional format.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return position in the wavetable, shifted left by OSCIL_F_BITS (which is 16 when this was written).
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1abe39f0740f318c0ecfb405cfac641a13';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phMod';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phmod_proportion';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '178';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the next sample given a phase modulation value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param phmod_proportion a phase modulation value given as a proportion of the wave. The
phmod_proportion parameter is a Q15n16 fixed-point number where the fractional
n16 part represents -1 to 1, modulating the phase by one whole table length in
each direction.
@return a sample from the table.
\xrefitem todo 14.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a23121f22ea447918088a79c7f9748b3d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '193';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the oscillator frequency with an unsigned int.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This is faster than using a
float, so it's useful when processor time is tight, but it can be tricky with
low and high frequencies, depending on the size of the wavetable being used. If
you're not getting the results you expect, try explicitly using a float, or try
setFreq_Q24n8() or or setFreq_Q16n16().
@param frequency to play the wave table.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1aa342e74f8e73edda0b0f042770e3fba4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the oscillator frequency with a float.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Using a float is the most reliable
way to set frequencies, -Might- be slower than using an int but you need either
this, setFreq_Q24n8() or setFreq_Q16n16() for fractional frequencies.
@param frequency to play the wave table.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1abc8a4ee236f7fd45dda9dece7292b6e7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq_Q24n8';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '224';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the frequency using Q24n8 fixed-point number format.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This might be faster than the float version for setting low frequencies such as
1.5 Hz, or other values which may not work well with your table size. A Q24n8
representation of 1.5 is 384 (ie. 1.5 * 256). Can't be used with UPDATE_RATE
less than 64 Hz.
@param frequency in Q24n8 fixed-point number format.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a73b52741178ed490463d9ff471cebef3';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq_Q16n16';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '243';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the frequency using Q16n16 fixed-point number format.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This is useful in
combination with Q16n16_mtof(), a fast alternative to mtof(), using Q16n16
fixed-point format instead of floats.
@note This should work OK with tables 2048 cells or smaller and
frequencies up to 4096 Hz.  Can't be used with UPDATE_RATE less than 64 Hz.
@param frequency in Q16n16 fixed-point number format.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a3b2ea7727b2ec911957b3862dbb6a8ec';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'atIndex';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'index';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '265';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the sample at the given table index.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param index between 0 and the table size.The
index rolls back around to 0 if it's larger than the table size.
@return the sample at the given table index.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a184110cb1901d2742a6016b46cbea027';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phaseIncFromFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '283';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
phaseIncFromFreq() and setPhaseInc() are for saving processor time when sliding
@endverbatim
between frequencies.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Instead of recalculating the phase increment for each
frequency in between, you can just calculate the phase increment for each end
frequency with phaseIncFromFreq(), then use a Line to interpolate on the fly and
use setPhaseInc() to set the phase increment at each step. (Note: I should
really profile this with the oscilloscope to see if it's worth the extra
confusion!)
@param frequency for which you want to calculate a phase increment value.
@return the phase increment value which will produce a given frequency.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a2ff9bfcc57e07bf0df2ed7db186ecff7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhaseInc';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phaseinc_fractional';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '293';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set a specific phase increment.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  See phaseIncFromFreq().
@param phaseinc_fractional a phase increment value as calculated by phaseIncFromFreq().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a935aa46742fb0e5b25bc31d45f52f2ae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'incrementPhase';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '314';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments the phase of the oscillator without returning a sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_oscil_1a6bb99c4761324a2965a89d7fbdf266c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readTable';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '324';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the current sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_oscil_1a94f9ae77bae736e9e67d4bdb0961303f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '335';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_oscil_1aecb2b317000e1dcc265381834618e81d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_increment_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '336';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_oscil_1ae1fb479b1def3e171db2194887f3beb8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'table';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '340';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-static-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_oscil_1ac1fbecb65a6571b1809e83f86f3f0dee';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static const unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJUST_FOR_NUM_TABLE_CELLS';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (NUM_TABLE_CELLS<2048) ? 8 : 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      sec-mem-desc-line = '308';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Used for shift arithmetic in setFreq() and its variations.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
  cp-fileline  = '78';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Oscil plays a wavetable, cycling through the table to generate an audio or
control signal.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 The frequency of the signal can be set or changed with
setFreq(), and the output of an Oscil can be produced with next() for a simple
cycling oscillator, or atIndex() for a particular sample in the table.
@tparam NUM_TABLE_CELLS This is defined in the table ".h" file the Oscil will be
using. It's important that it's a power of 2, and either a literal number (eg. "8192") or a
defined macro, rather than a const or int, for the Oscil to run fast enough.
@tparam UPDATE_RATE This will be AUDIO_RATE if the Oscil is updated in
updateAudio(), or CONTROL_RATE if it's updated each time updateControl() is
called. It could also be a fraction of CONTROL_RATE if you are doing some kind
of cyclic updating in updateControl(), for example, to spread out the processor load.
\xrefitem todo 11.@note If you #define OSCIL_DITHER_PHASE before you #include <Oscil.h>,
the phase increments will be dithered, which reduces spurious frequency spurs
in the audio output, at the cost of some extra processing and memory.
@section char2mozzi
Converting soundfiles for Mozzi
There is a python script called char2mozzi.py in the Mozzi/python folder.
The usage is:
python char2mozzi.py infilename outfilename tablename samplerate
_EnD_oF_dEf_TeXt_;
}; /* class */
struct = {
  cp-id     = 'struct_wave_packet_1_1parameters';
  cp-name   = 'WavePacket::parameters';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_wave_packet_1_1parameters_1a5c8dc470dc55d764d1143faeb5035768';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'previous_phase';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '151';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_wave_packet_1_1parameters_1a2cc70bf14216549da6ebe7ff15da57cc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'centrefreq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '152';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_wave_packet_1_1parameters_1a6368e644fc816759f49a22afc0a336e9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'bandwidth';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '153';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
  cp-fileline  = '150';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
struct = {
  cp-id     = 'struct_a_d_s_r_1_1phase';
  cp-name   = 'ADSR::phase';
  cp-section = {
    sec-kind = 'public-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_a_d_s_r_1_1phase_1a4b32fdb87ea977f2a5ce9192eca83cb0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_type';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_a_d_s_r_1_1phase_1a2ccc14a3206bce8731999a38ceb4d9c1';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'control_steps';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '57';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_a_d_s_r_1_1phase_1ac7760d026e8e30d5783f9e40b86832c9';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'audio_steps';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'struct_a_d_s_r_1_1phase_1ad28729738ac3a8624a29cb02923acbdf';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'level';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
      sec-mem-desc-line = '59';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
  cp-fileline  = '55';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* struct */
class = {
  cp-id     = 'class_phasor';
  cp-name   = 'Phasor';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1a147c4c3aa7506c3da800e6cc77deb4ac';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Phasor';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '54';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 "Phasor <AUDIO_RATE> myphasor;"
makes a Phasor which updates at AUDIO_RATE.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1a08ab94aeb466450173bd486fbf8eb823';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments one step along the phase.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return the next value.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1a509e4a782a36cb9e913da170d6707421';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'value';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the current value of the phasor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 The Phasor will continue incrementing from this
value using any previously calculated step size.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1afc6106c648bddb5f2f084b8f34216b0f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '87';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the Phasor frequency with an unsigned int.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param frequency is how many times per second to count from
0 to the maximum unsigned long value 4294967295.
@note Timing 8us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1a81f1976ebb4a91f66f26674efca52072';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the Phasor frequency with a float.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param frequency is  how many times per second to count from
0 to the maximum unsigned long value 4294967295.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1a9b5992b53fa7e449fec950df00c46230';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phaseIncFromFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
                phaseIncFromFreq() and setPhaseInc() are for saving processor time when sliding
@endverbatim
between frequencies.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Instead of recalculating the phase increment for each
frequency in between, you can just calculate the phase increment for each end
frequency with phaseIncFromFreq(), then use a Line to interpolate on the fly and
use setPhaseInc() to set the phase increment at each step. (Note: I should
really profile this with the oscilloscope to see if it's worth the extra
confusion!)
@param frequency for which you want to calculate a phase increment value.
@return the phase increment value which will produce a given frequency.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_phasor_1aa3d62bdf762247b2523c0a625caeedd7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhaseInc';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'stepsize';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set a specific phase increment.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  See phaseIncFromFreq().
@param stepsize a phase increment value as calculated by phaseIncFromFreq().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_phasor_1a9dee99a6f3b7201cb4fea2e1d67aa3b9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'current_value';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '47';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_phasor_1a5d387c6858ed97b94b3d1a5c79a057f1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'step_size';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      sec-mem-desc-line = '48';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
  cp-fileline  = '45';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Phasor repeatedly generates a high resolution ramp at a variable frequency.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
The output of Phasor.next() is an unsigned number between 0 and 4294967295, the
maximum that can be expressed by an unsigned long.
@tparam UPDATE_RATE the rate at which the Phasor will be updated,
usually CONTROL_RATE or AUDIO_RATE.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_portamento';
  cp-name   = 'Portamento';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1adc910a47d3fe8eff848d6de42d7280df';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Portamento';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '40';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1af19c3b3c189e111079f54211ff5a4ebe';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTime';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'milliseconds';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set how long it will take to slide from note to note, in milliseconds.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param milliseconds
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1af93c2b0ab1efa88d4e15f919401c2337';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call this at note-on, it initialises the portamento.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param note a midi note number, a whole number.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1af70701abfdd9f3d788f3b313e38017d0';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'note';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '69';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call this at note-on, it initialises the portamento.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param note a midi note number in Q16n16 fractional format.  This is useful for non-whole note or detuned values.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1ad39101f5275c433713df7699214638bc';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '82';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
Use this in updateControl() to provide a frequency to the oscillator it's controlling, for example: 
@endverbatim
myOscil.setFreq_Q16n16(myPortamento.next());
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return a Q16n16 fractional frequency value, progressing smoothly between successive notes.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1a2159c919a973c865cc945923fff9402c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'countdown';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '95';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1ae71ccd302a6ef82b65f68dd3dea5aa74';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'control_steps_per_portamento';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1a2fd42ff31dd2e83ceb205add1b5e965f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'target_freq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '97';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1ae87ad7c106fb44dff41605db73adf87d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'portamento_on';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1ab891a95a96c26a3476f40b43a6137294';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'MICROS_PER_CONTROL_STEP';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '99';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_portamento_1a4e1ba90047f0ea20834b0a65fd53e08c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Line< Q16n16 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aPortamentoLine';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '100';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-static-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_portamento_1a1c810fb2ddebac489fd607c21e6500e8';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'convertMsecToControlSteps';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'msec';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
      sec-mem-desc-line = '105';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
  cp-fileline  = '34';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A simple portamento (pitch slide from one note to the next) effect, useful for note-based applications.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_r_cpoll';
  cp-name   = 'RCpoll';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_r_cpoll_1a44673505bbfbac288ec994dd48017e83';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RCpoll';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
      sec-mem-desc-line = '18';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_r_cpoll_1ab61697b3922ed289c8d501ccd11cbd6f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
      sec-mem-desc-line = '29';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks whether the capacitor has charged, and returns how long it took for the most recent charge.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This would preferably be called in updateControl(), but if the resolution isn't fine enough or the 
pin charges too fast for updateControl() to catch, try it in updateAudio().
@return the sensor value, reflected in how many checking cycles it took to charge the capacitor.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_r_cpoll_1ab9567c6c7843927a338ec51de7fc7602';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'result';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_r_cpoll_1a888244edd9053b1542b65820b3a0c1ba';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boolean
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rc_cued';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_r_cpoll_1ab34f20ec42054b6b35f86fc86cd8ab32';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'output';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
      sec-mem-desc-line = '51';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
  cp-fileline  = '13';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A class for reading voltage on a digital pin, derived from http://arduino.cc/en/Tutorial/RCtime.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This is designed to be used in updateControl().  Each time it is called, it checks if a capacitor has charged,
and returns an output reflecting how long it took for the most recent charge.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_recent_average';
  cp-name   = 'RecentAverage';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recent_average_1a75bd636f24d01b516c063bfd69c97810';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'RecentAverage';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '55';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@tparam T the type of numbers to average, eg. int, unsigned int, float etc.  It will be relatively slow with
floating point numbers, as it will use a divide operation for the averaging.
Nevertheless, there might be a time when it's useful.
@tparam NUM_READINGS the number of readings to keep track of. It must be a power of two (unless
you're averaging floats). The higher the number, the more the readings will be
smoothed, but the slower the output will respond to the input.
@note Watch out for overflows if you are averaging a long number types!
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_recent_average_1a92de648c74ea40c061e3081b5f9637ce';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '98';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Give the average of the last NUM_READINGS.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input a control signal such as an analog input which needs smoothing.
@return the smoothed result.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_recent_average_1ad8b16016ab5b256590dbd4e5cb09e37b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'readings';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_recent_average_1ae66b0f7365bfc02d768e2458134e6ef7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'index';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '116';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_recent_average_1afe57d42c2e5f123aa2b1de34934814f2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'total';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '117';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_recent_average_1a92572fd46068c8e74796494729b67923';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'num_readings_as_rshift';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
      sec-mem-desc-line = '118';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
  cp-fileline  = '43';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Calculates a running average over a 
specified number of the most recent readings.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
Like Smooth(), this is good for smoothing analog inputs in updateControl().
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_reverb_tank';
  cp-name   = 'ReverbTank';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_reverb_tank_1a2b413e10d5d3688f2066624e5a8ae324';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ReverbTank';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection1';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
37
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection2';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
77
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection3';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
127
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loop1_delay';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
117
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loop2_delay';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
255
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'feedback_level';
        sec-mem-param-defval = <<_EnD_oF_dEf_TeXt_
85
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '56';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  This has default values for the early reflection times, recirculating delay lengths and feedback level, 
which can be changed here in the constructor or set with other functions during run time.
@param early_reflection1 how long in delay cells till the first early reflection, from 0 to 127
@param early_reflection2 how long in delay cells till the second early reflection, from early_reflection1 to 127
@param early_reflection3 how long in delay cells till the third early reflection, from early_reflection2 to 127
@param loop1_delay how long in delay cells for the first recirculating delay, form 0 to 127
@param loop2_delay how long in delay cells for the first recirculating delay, form 0 to 255
@param feedback_level how much recirculation, from -128 to 127
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_reverb_tank_1a4930ae7a871dba610fb141d7ab83d827';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '76';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Process the next audio sample and return the reverbed signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  This returns only the "wet" signal,
which can be combined with the dry input signal in the sketch.
@param input the audio signal to process
@return the processed signal
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_reverb_tank_1aeaa523c4fae743ef7ded87d4902af3d7';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setEarlyReflections';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection1';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection2';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'early_reflection3';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '102';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the early reflection times in terms of delay cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param early_reflection1 how long in delay cells till the first early reflection, from 0 to 127
@param early_reflection2 how long in delay cells till the second early reflection, from early_reflection1 to 127
@param early_reflection3 how long in delay cells till the third early reflection, from early_reflection2 to 127
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_reverb_tank_1a6c19a84c7bc1f068871551891011a89c';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setLoopDelays';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loop1_delay';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'loop2_delay';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '113';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the loop delay times in terms of delay cells.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param loop1_delay how long in delay cells for the first recirculating delay, form 0 to 127
@param loop2_delay how long in delay cells for the first recirculating delay, form 0 to 255
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_reverb_tank_1a25ce51abfcaccb316007edc77446520b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFeebackLevel';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'feedback_level';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '121';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the feedback level for the recirculating delays.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param feedback_level how much recirculation, from -128 to 127
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1a4faa3361504ad6fe475d67336277e3c7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_early_reflection1';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '127';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1ad1fb7e2377d55dc9ac9f190fd7abfb56';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_early_reflection2';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1a98fc50f861cf1e86270bb3072faa4ac2';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_early_reflection3';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '129';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1af00e12fcf82851c7a003cd88045433a7';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = '_feedback_level';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '131';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1a61e8fc7037b28f5b00be367f3ddc937b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
AudioDelay< 128 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aLoopDel0';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1a58eba5d7ed6cfe074b2a9e8d4d0d69ea';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
AudioDelay< 128, int >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aLoopDel1';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_reverb_tank_1aba9915633f4739d0aad3ad9c63963f02';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
AudioDelay< 256, int >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aLoopDel2';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
      sec-mem-desc-line = '135';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
  cp-fileline  = '44';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A reverb which sounds like the inside of a tin can.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
ReverbTank is small enough to fit on the Arduino Nano, which for some reason
wasn't able to fit a larger version which did fit on other 328 based boards. For
simplicity, ReverbTank has hardcoded maximum delay sizes but also has default
delay times which can be changed in the constructor or by setting during run
time to allow live tweaking.
This is a highly simplified design drawing on and probably misinterpreting 
Miller Puckette's G08.reverb recirculating reverb example for Pure Data.

The room size according to the maximum delay lengths corresponds to:

early reflections and recirculating delay 1: 128/16384 seconds * 340.29 m/s speed of sound = 3.5 metres
recirculating delay 2: 7 metres
It looks bigger on paper than it sounds.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_sample';
  cp-name   = 'Sample';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a9b95b8797648288b1c3698beda1dd34a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Sample';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TABLE_NAME';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '73';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param TABLE_NAME the name of the array the Sample will be using. This
can be found in the table ".h" file if you are using a table made for
Mozzi by the char2mozzi.py python script in Mozzi's python
folder.  Sound tables can be of arbitrary lengths for Sample().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1af2ce86342a595a3571ce2e9a38e96a96';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Sample';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '85';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
Declare a Sample with template TABLE_NUM_CELLS and UPDATE_RATE parameters, without specifying a particular wave table for it to play.
The table can be set or changed on the fly with setTable().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a9911f53f66a5413a923b73f3d890abd4';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setTable';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'TABLE_NAME';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Change the sound table which will be played by the Sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param TABLE_NAME is the name of the array in the table ".h" file you're using.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a9fb19ee79276c6663c521ea2b17ea079';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setStart';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'startpos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '106';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the starting position in samples.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param startpos offset position in samples.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a57307ee93ef0fcff36d543596eb79b72';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '115';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Resets the phase (the playhead) to the start position, which will be 0 unless set to another value with setStart();.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1ad2dbae6c05040fd0381653f1a102e6ee';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'start';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'startpos';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '128';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the a new start position and sets the phase (the playhead) to that position.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param startpos position in samples from the beginning of the sound.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a2e82144fde95ab74fb7525f33f3fe4d6';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setEnd';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'end';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the end position in samples from the beginning of the sound.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param end position in samples.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a79cb13998692fdff715c7b6b1beb991a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'rangeWholeSample';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '148';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets the start and end points to include the range of the whole sound table.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1aaa2257099a1269445651145e46de5bed';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setLoopingOn';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '158';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Turns looping on, with the whole sample length as the loop range.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1ab1b29e0ccaee2c13e55ed9aa2202812e';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setLoopingOff';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '167';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Turns looping off.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a6b94fc8a8042f498fbd8693d9bce9719';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '181';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the sample at the current phase position, or 0 if looping is off
and the phase overshoots the end of the sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Updates the phase
according to the current frequency.
@return the next sample value from the table, or 0 if it's finished playing.
\xrefitem todo 15.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1abf9901db9aaee9240d6342a2204a6ce2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
boolean
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'isPlaying';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '207';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Checks if the sample is playing by seeing if the phase is within the limits of its end position.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return true if the sample is playing
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a3fe56b93df218ff887eb25b7f694fb8a';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '238';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the oscillator frequency with an unsigned int.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This is faster than using a float, so it's useful when processor time is tight,
but it can be tricky with low and high frequencies, depending on the size of the
wavetable being used. If you're not getting the results you expect, try
explicitly using a float, or try setFreq_Q24n8.
@param frequency to play the wave table.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a11a7948a655bea79ddd67059c2186816';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '252';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the sample frequency with a float.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Using a float is the most reliable
way to set frequencies, -Might- be slower than using an int but you need either
this or setFreq_Q24n8 for fractional frequencies.
@param frequency to play the wave table.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1aa2086deef68e43620d7502dd8bb78678';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFreq_Q24n8';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '270';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the frequency using Q24n8 fixed-point number format.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
This might be faster than the float version for setting low frequencies
such as 1.5 Hz, or other values which may not work well with your table
size. Note: use with caution because it's prone to overflow with higher
frequencies and larger table sizes. An Q24n8 representation of 1.5 is 384
(ie. 1.5 * 256).
@param frequency in Q24n8 fixed-point number format.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1ad5c4e048c4aa7a36710e58466caabc94';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'atIndex';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'index';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '287';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Returns the sample at the given table index.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param index between 0 and the table size.The
index rolls back around to 0 if it's larger than the table size.
@return the sample at the given table index.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a7dfbdfca35b7bbf074e24e62a1d53309';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phaseIncFromFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'frequency';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '304';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
phaseIncFromFreq() and setPhaseInc() are for saving processor time when sliding
@endverbatim
between frequencies.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Instead of recalculating the phase increment for each
frequency in between, you can just calculate the phase increment for each end
frequency with phaseIncFromFreq(), then use a Line to interpolate on the fly and
use setPhaseInc() to set the phase increment at each step. (Note: I should
really profile this with the oscilloscope to see if it's worth the extra
confusion!)
@param frequency for which you want to calculate a phase increment value.
@return the phase increment value which will produce a given frequency.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a95735f0b10eb0fa50402c47d0cd5d871';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setPhaseInc';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phaseinc_fractional';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '314';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set a specific phase increment.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
  See phaseIncFromFreq().
@param phaseinc_fractional a phase increment value as calculated by phaseIncFromFreq().
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_sample_1a8a03dc3d3ff1140d4a647495e5be82af';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'incrementPhase';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '334';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Increments the phase of the oscillator without returning a sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1a88803cf20b0e01453588d87946df9730';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '340';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1a991792415a77e1758261d4f03ce8191f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'phase_increment_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '341';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1aaf3efbb56dfb7cc581c826da205a5c31';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const char *
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'table';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '342';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1a9ae231eae2fb7cd9747b12e31ffda89e';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
bool
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'looping';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '343';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1ac89957fc1460976a53342d10672ce681';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'startpos_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '344';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1a220ebf33b6447d714cf552f2826cfa20';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'endpos_fractional';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '344';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-static-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_sample_1a503011f6fe4949a09a2340206df7a825';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
static const unsigned char
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'ADJUST_FOR_NUM_TABLE_CELLS';
      sec-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (NUM_TABLE_CELLS<2048) ? 8 : 0
_EnD_oF_dEf_TeXt_;
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      sec-mem-desc-line = '328';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Used for shift arithmetic in setFreq() and its variations.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
  cp-fileline  = '63';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Sample is like Oscil, it plays a wavetable.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
  However, Sample can be
set to play once through only, with variable start and end points,
or can loop, also with variable start and end points.
It defaults to playing once through the whole sound table, from start to finish.
@tparam NUM_TABLE_CELLS This is defined in the table ".h" file the Sample will be
using.  The sound table can be arbitrary length for Sample.
It's important that NUM_TABLE_CELLS is either a literal number (eg. "8192") or a
defined macro, rather than a const or int, for the Sample to run fast enough.
@tparam UPDATE_RATE This will be AUDIO_RATE if the Sample is updated in
updateAudio(), or CONTROL_RATE if it's updated each time updateControl() is
called. It could also be a fraction of CONTROL_RATE if you are doing some kind
of cyclic updating in updateControl(), for example, to spread out the processor load.
@section char2mozzi
Converting soundfiles for Mozzi.
There is a python script called char2mozzi.py in the Mozzi/python folder.
The script converts raw sound data saved from a program like Audacity.
Instructions are in the char2mozzi.py file.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_smooth';
  cp-name   = 'Smooth';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_smooth_1ac6626aae94eb7a22024e2054c1bbbb26';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'Smooth';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smoothness';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
      sec-mem-desc-line = '58';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param smoothness sets how much smoothing the filter will apply to
its input. Use a float in the range 0~1, where 0 is not very smooth and 0.99 is
very smooth.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_smooth_1ab7c809b6b5217771832a3e829695f8d5';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
T
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'in';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Filters the input and returns the filtered value.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in the signal to be smoothed.
@return the filtered signal.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_smooth_1aac44bbf7a9bc6b9bae80eecc1be6e188';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setSmoothness';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'smoothness';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets how much smoothing the filter will apply to its input.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param smoothness sets how much smoothing the filter will apply to
its input. Use a float in the range 0~1, where 0 is not very smooth and 0.99 is
very smooth.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_smooth_1a53e1a200506db97d7277ad7aaf558fbb';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'last_out';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
      sec-mem-desc-line = '49';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_smooth_1a0842b05f3565bf512b84ee06577e0b0f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'a';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
      sec-mem-desc-line = '50';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
  cp-fileline  = '47';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A simple infinite impulse response low pass filter for smoothing control signals.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
This algorithm comes from http://en.wikipedia.org/wiki/Low-pass_filter: 
y[i] := y[i-1] + α * (x[i] - y[i-1]), 
translated as 
out = last_out + a * (in - last_out). 
It's not calibrated to any real-world update rate, so if you use it at
CONTROL_RATE and you change CONTROL_RATE, you'll need to adjust the smoothness
value to suit.
@tparam T the type of numbers being smoothed.  Watch out for numbers overflowing the
internal calculations. Some experimentation is recommended.
@note Timing: ~5us for 16 bit types, ~1us for 8 bit types.
\xrefitem todo 16.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_state_variable';
  cp-name   = 'StateVariable';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a9950b71a16f63654552d3e15774d6638';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'StateVariable';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '62';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a992e23a80b611b72e3e764c14d5ee188';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setResonance';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'resonance';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '75';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set how resonant the filter will be.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param resonance a byte value between 1 and 255.  
The lower this value is, the more resonant the filter.
At very low values, the filter can output loud peaks which can exceed
Mozzi's output range, so you may need to attenuate the output in your sketch.
@note Timing < 500 ns
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a47e7ddad76db7009e370fa91ea5d4d3d';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCentreFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'centre_freq';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '103';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the centre or corner frequency of the filter.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param centre_freq 20 - 4096 Hz (AUDIO_RATE/4).
This will be the cut-off frequency for LOWPASS and HIGHPASS, and the
centre frequency to pass or reduce for BANDPASS and NOTCH.
@note Timing 25-30us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a14cb100c22e4a33025665ef3620ca2b8';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '120';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input the signal input.
@return the signal output.
@note Timing: 16 - 20 us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1ae168f49e20949bff1aa5e4b19488e1ae';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Int2Type< LOWPASS >
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '143';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param in the signal input.
@return the signal output.
@note Timing: 16 - 20 us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a1df9e5fe0435d2e34fb97cbc6d4c131c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Int2Type< BANDPASS >
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input the signal input.
@return the signal output.
@note Timing: 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1a88c80e8c1d1bc0a5ca1e6e69ba9e6afc';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Int2Type< HIGHPASS >
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '180';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input the signal input.
@return the signal output.
@note Timing: 
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_state_variable_1acf7311af8c396e66a59086ad44e7dbe1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'input';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
Int2Type< NOTCH >
_EnD_oF_dEf_TeXt_;
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '199';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next sample, given an input signal.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param input the signal input.
@return the signal output.
@note Timing: 16 - 20 us
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_state_variable_1a6ab831948fb95bdc5771eb328c586428';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'low';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_state_variable_1ac4b1d9e22fe3e7e5815a07f94bf56fad';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'band';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '132';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_state_variable_1a36c331f792382211f3502b4988c94bc4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'q';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_state_variable_1a84c28ce226305cd13de73c89e7d0246f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'scale';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '133';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_state_variable_1ad160959c0b85360eb3a64aec585f8fc1';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
volatile Q1n15
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'f';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      sec-mem-desc-line = '134';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
  cp-fileline  = '55';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
A State Variable filter which offers 12db resonant low, high, bandpass and notch modes.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@tparam FILTER_TYPE choose between LOWPASS, BANDPASS, HIGHPASS and NOTCH.
@note To save processing time, this version of the filter does not saturate internally, 
so any resonant peaks are unceremoniously truncated.  It may be worth adding code to
constrain the internal variables to enable resonant saturating effects.
\xrefitem todo 17.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_wave_packet';
  cp-name   = 'WavePacket';
  cp-section = {
    sec-kind = 'public-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1a09afa3b26d61c97e24ccbae9cba2fd57';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'WavePacket';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '53';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Constructor.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1ac693b3d676b583584a8cfc6b9cc0f37f';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'set';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fundamental';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bandwidth';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'centrefreq';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '68';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set all the parameters for the synthesis.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The function is designed so that usable ranges for parameters can come from analog inputs, ie. 0-1023.
@param fundamental the rate at which packets are produced.
@param bandwidth the width of each packet.  A lower value allows more 
of the centre frequency to be audible, a rounder sound.  
A higher value produces narrower packets, a more buzzing sound.
@param centrefreq the oscillation frequency within each packet.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1af87c37ffd274eee91aa93c0f7d560be2';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setFundamental';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'fundamental';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '81';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the fundamental frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The function is designed so that usable ranges for parameters can come from analog inputs, ie. 0-1023.
@param fundamental the rate at which packets are produced.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1abce5b3ca4c559473c199744753fb75aa';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setBandwidth';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'bandwidth';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '96';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the bandwidth.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The function is designed so that usable ranges for parameters can come from analog inputs, ie. 0-1023.
@param bandwidth the width of each packet.  A lower value allows more of the 
centre frequency to be audible, a rounder sound.  
A higher value produces narrower packets, a more buzzing sound.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1adbbbf8b6b9eaae18ef381ff04be3eb5b';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'setCentreFreq';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'centrefreq';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '111';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the centre frequency.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
The function is designed so that usable ranges for parameters can come from analog inputs, ie. 0-1023.
@param centrefreq the oscillation frequency within each packet.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1ab4e35082b60d3ccc29c86d09078329bd';
      sec-mem-virt = normal;
      sec-mem-prot = public;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'next';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '124';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Calculate the next synthesised sample.
_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return a full-scale 16 bit value, which needs to be scaled to suit your sketch.  If you're using it straight as the sketch output,
then that will be yourThing.next()>>2 for HIFI 14 bit output, or >>8 for STANDARD 8+ bit output.
_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-func';
    sec-member = {
      sec-mem-kind = 'function';
      sec-mem-id   = 'class_wave_packet_1a7fee649d5a65feb777ce1c5d93d58988';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'signalPath';
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
struct parameters &
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'param';
      }; /*        sec-mem-param--param */
      sec-mem-param = {
        sec-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        sec-mem-param-declname = 'phase';
      }; /*        sec-mem-param--param */
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '165';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-section = {
    sec-kind = 'private-attrib';
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a27e2fb5166ffb65f9eaad510c2e5d9c9';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'invFreq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '139';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a5a5b38862620ec96eff56c3ee153441d';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gcentrefreq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '140';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a7cc5eb6ed8f8bafedcf61547ed76539b';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'gbandwidth';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '141';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1af3fd8417710916d0c7c89e1cb19ca009';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Line< Q15n16 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aCentrefreq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '144';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a925f72134605881f814b79248f6253f3';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Line< Q16n16 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aBandwidth';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '145';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a9f3ccd371bb5a2afcf02ff63ad4d167f';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Line< Q16n16 >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aFreq';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '146';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a0880b6d47a9507aa1719678587d9bd75';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct WavePacket::parameters
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'params1';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1ad7c0f94265047e5551974a15a0112cbf';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
struct WavePacket::parameters
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'params2';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '155';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1a7a7b40682e70c3fada448717cd2f1505';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
const unsigned int
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'AUDIO_STEPS_PER_CONTROL';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '158';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1aaf252a0e61d17f0676e0e0d2dcd6a79c';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Oscil< COS8192_NUM_CELLS, AUDIO_RATE >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aCos';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '160';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
    sec-member = {
      sec-mem-kind = 'variable';
      sec-mem-id   = 'class_wave_packet_1aa8d4c6a106386ad3759ea6f2c08a8ce4';
      sec-mem-virt = normal;
      sec-mem-prot = private;
      sec-mem-type = <<_EnD_oF_dEf_TeXt_
Phasor< AUDIO_RATE >
_EnD_oF_dEf_TeXt_;
      sec-mem-name = 'aPhasor';
      sec-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      sec-mem-desc-line = '161';
      sec-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      sec-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* sec-member */
  }; /* cp-section */
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
  cp-fileline  = '48';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
Wavepacket synthesis, with two overlapping streams of wave packets.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
 Draws on
Miller Puckette's Pure Data example, F14.wave.packet.pd. Each packet is an
enveloped grain of a sin (or cos) wave. The frequency of the wave, the width of
the envelopes and the rate of release of envelopes are the parameters which can
be changed.
_EnD_oF_dEf_TeXt_;
}; /* class */
class = {
  cp-id     = 'class_wave_shaper';
  cp-name   = 'WaveShaper';
  cp-filename  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WaveShaper.h';
  cp-fileline  = '34';
  cp-briefdesc = <<_EnD_oF_dEf_TeXt_
WaveShaper maps values from its input to values in a table, which are returned as output.
_EnD_oF_dEf_TeXt_;
  cp-documentation = <<_EnD_oF_dEf_TeXt_
@tparam T the type of numbers being input to be shaped, chosen to match the table.
_EnD_oF_dEf_TeXt_;
}; /* class */
file = {
  file-id   = '_a_d_s_r_8h';
  file-name = 'ADSR.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ADSR.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_audio_config_hi_speed14bit_pwm_8h';
  file-name = 'AudioConfigHiSpeed14bitPwm.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_hi_speed14bit_pwm_8h_1af907b5e2bf79ae514ec38f0ad687f320';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_HIGHBYTE_PIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
TIMER1_A_PIN
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_hi_speed14bit_pwm_8h_1a924a602a1618a3829d35a4e2e9ff512f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_LOWBYTE_PIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
TIMER1_B_PIN
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_hi_speed14bit_pwm_8h_1a8f8ac5be3f490a05eae13008b7391144';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_HIGHBYTE_REGISTER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
OCR1AL
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_hi_speed14bit_pwm_8h_1a808a9b91b8f1ed6d40f1c9f938f0bf57';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_LOWBYTE_REGISTER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
OCR1BL
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
      define-mem-desc-line = '21';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_hi_speed14bit_pwm_8h_1aa2b18130c536085943a5768146fcb8bb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((unsigned int) 0x2000)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
      define-mem-desc-line = '25';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigHiSpeed14bitPwm.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_audio_config_standard9bit_pwm_8h';
  file-name = 'AudioConfigStandard9bitPwm.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1ga800c094e0a14fc31d87a360b3807a1b8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'STANDARD_PWM_RESOLUTION';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
488
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigStandard9bitPwm.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is the dynamic range of Mozzi's audio output in STANDARD mode.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
It is equal to Timer1.pwmPeriod calculated for interrupt rate 16384.
It's included in the documentation because it's a slightly unusual number and useful to know 
about when you're writing sketches.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_standard9bit_pwm_8h_1aa2b18130c536085943a5768146fcb8bb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_BIAS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((unsigned char) 244)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigStandard9bitPwm.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_standard9bit_pwm_8h_1af7bea692f194c5c5ef234ab57e2a3d0c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_OUTPUT_REGISTER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
OCR1A
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigStandard9bitPwm.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_audio_config_standard9bit_pwm_8h_1a4a4f0dc9e1f5947ac6b5336b5cf14d4f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_CHANNEL_1_PIN';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
TIMER1_A_PIN
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigStandard9bitPwm.h';
      define-mem-desc-line = '19';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioConfigStandard9bitPwm.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_audio_delay_8h';
  file-name = 'AudioDelay.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelay.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_audio_delay_feedback_8h';
  file-name = 'AudioDelayFeedback.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AudioDelayFeedback.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_auto_range_8h';
  file-name = 'AutoRange.h';
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_auto_range_8h_1a7da2ac4c79ee4e685d982f288bb48d85';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
class AutoRange
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'range_max';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      var-mem-desc-line = '60';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_auto_range_8h_1a93c42e2c0cdaa0940ebde6994d7a830c';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
class AutoRange
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'range_min';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      var-mem-desc-line = '60';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_auto_range_8h_1a9a3a29c8a124cdee9308e487710410ae';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
class AutoRange
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'range';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
      var-mem-desc-line = '60';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/AutoRange.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'known__16bit__timers_8h';
  file-name = 'known_16bit_timers.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/config/known_16bit_timers.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_control_delay_8h';
  file-name = 'ControlDelay.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ControlDelay.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_d_cfilter_8h';
  file-name = 'DCfilter.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/DCfilter.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_ead_8h';
  file-name = 'Ead.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Ead.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_event_delay_8h';
  file-name = 'EventDelay.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/EventDelay.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_line_8h';
  file-name = 'Line.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Line.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_low_pass_filter_8h';
  file-name = 'LowPassFilter.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_low_pass_filter_8h_1a9636ab99608c6d1d88c6da7075d4a67b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'FX_SHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_low_pass_filter_8h_1a5a34c652d5f67554323e1bb4d2cd9190';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SHIFTED_1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((unsigned char) 255)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/LowPassFilter.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'meta_8h';
  file-name = 'meta.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/meta.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__analog_8cpp';
  file-name = 'mozzi_analog.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gaf46803d06aa1d839192cc6125e39ff01';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'setupFastAnalogRead';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '29';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Make analogRead() faster than the standard Arduino version, changing the
duration from about 105 in unmodified Arduino to 15 microseconds for a
dependable analogRead().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Put this in setup() if you intend to use analogRead()
with Mozzi, to avoid glitches.
Don't use it with the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() approach, it may contribute to glitches.
See: http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1208715493/11, and
http://www.marulaberry.co.za/index.php/tutorials/code/arduino-adc/
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gac9b066c792d2b822dcf518eef19a7c3e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcEnableInterrupt';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call this in setup() to enable reading analog inputs in the background while audio generating continues.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Then call adcReadAllChannels() at the end of each updateControl() and the results for each analog channel will be
available by calling adcGetResult(channel_num) next time updateControl() runs.
@note This method using adcEnableInterrupt(), adcReadAllChannels() and adcGetResult() is an easy and
efficient way to read analog inputs while generating sound with Mozzi. For many
sketches, however, simply putting setupFastAnalogRead() in setup() and calling
Arduino's usual analogRead() will work fast enough.
@note Don't use setupFastAnalogRead() with adcEnableInterrupt().
It may cause the ADC process to hog the processor, causing audio glitches.
@note In some cases this method can cause glitches which may have to do with the ADC
interrupt interfering with the audio or control interrupts. If this occurs, use
the adcStartConversion(), adcGetResult() methods instead.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gae0d3533acb5fd56db8f7317e24bea6b5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcSetChannel';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '54';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the channel or pin for the next analog input to be read from.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel or pin number.  If pin number is provided, adcSetChannel() will convert it to the channel number.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga8e081d7e359e219b7dce35538fcf3e39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcStartConversion';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '97';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Starts an analog to digital conversion of the voltage at a specified pin.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Unlike
Arduino's analogRead() function which waits until a conversion is complete before
returning, adcStartConversion() only sets the conversion to begin, so you can use
the cpu for other things and call for the result later with adcGetResult().
This works well in updateControl(), where you can call adcStartConversion() and
get the result with adcGetResult() the next time the updateControl()
interrupt runs.
@param pin is the analog pin number (A0 to A...) or the channel number (0 to ....) to read.
@note This is the most audio-friendly way to read analog inputs,
but can be messier in your program than the the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() way.
@note Timing: about 1us when used in updateControl() with CONTROL_RATE 64.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gac3d2277d3d3823c6d5c727067571aab3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcStartConversion';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '146';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Starts the analog conversion on the pin or channel most recently set with adcSetChannel();.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gaaf4320d2621e15ea704900ea26a8aa07';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcGetResult';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '155';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Waits for the result of the most recent adcStartConversion().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  If used as the first function
of updateControl(), to receive the result of adcStartConversion() from the end of the last
updateControl(), there will probably be no waiting time, as the ADC conversion will
have happened in between interrupts.  This is a big time-saver, since you don't have to
waste time waiting for analogRead() to return (1us here vs 105 us for standard Arduino).
@return The resut of the most recent adcStartConversion().
@note This is the most audio-friendly way to read analog inputs,
but can be messier in your program than the the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult(byte) way.
@note Timing: about 1us when used in updateControl() with CONTROL_RATE 64.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gad4433797b75fedd473250e9aa414dcae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'disconnectDigitalIn';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '186';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Prepare an analog input channel by turning off its digital input buffer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This helps to reduce noise, increase analog reading speed, and save power.

Here's more detail from http://www.openmusiclabs.com/learning/digital/atmega-adc/:

The DIDR (Data Input Disable Register) disconnects the digital inputs from
whichever ADC channels you are using. This is important for 2 reasons. First
off, an analog input will be floating all over the place, and causing the
digital input to constantly toggle high and low. This creates excessive noise
near the ADC, and burns extra power. Secondly, the digital input and associated
DIDR switch have a capacitance associated with them which will slow down your
input signal if you are sampling a highly resistive load.

And from the ATmega328p datasheet, p266:

When an analog signal is applied to the ADC pin and the digital input from
this pin is not needed, this bit should be written logic one to reduce power
consumption in the digital input buffer. Note that ADC named_pins ADC7 
and ADC6 do not have digital input buffers, and therefore do not require 
Digital Input Disable bits.
@param channel_num the analog input channel you wish to use.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gacd83735876cf223916ea4925ec4efd4a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'reconnectDigitalIn';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '191';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reconnect the digital input buffer for an analog input channel which has
been set for analog input with disconnectDigitalIn().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel_num the analog input channel you wish to reconnect.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga5042e7c576dd0307be38eb70efdb69fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcDisconnectAllDigitalIns';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '196';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Prepare all analog input channels by turning off their digital input buffers.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This helps to reduce noise, increase analog reading speed, and save power.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gabad497d1f8c8026e81849be0b65bf38f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcReconnectAllDigitalIns';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '203';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reconnect the digital input buffers for analog input channels which have
been set for analog input with disconnectDigitalIn().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga829091330473b48a8b9236d0be4b8755';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcReadAllChannels';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '239';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call adcReadAllChannels() in updateControl() and the results for each channel
will be available by calling adcGetResult(channel_num) next time updateControl()
runs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Reading will happen in the background, using a minimum of processor time
and without blocking other code.

More detail: adcReadAllChannels() starts an initial conversion which triggers an
interrupt when it's complete. The interrupt code stores the result in an array,
changes to the next channel and starts another conversion. When all the channels
have been sampled, the ISR doesn't start a new conversion, so it doesn't
re-trigger itself or use processor time until adcReadAllChannels() is called
again. At any time the latest conversion result for each channel is available by
calling adcGetResult(channel_num).
@note In some cases this method can cause glitches which may have to do with the ADC interrupt
interfering with the audio or control interrupts.  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga1d1ee9fa143c3a0505e76b41fc2af09f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcGetResult';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '251';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This returns the most recent analog reading for the specified channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel_num The channels are plain numbers 0 to whatever your board goes up to, not the pin
labels A0 to A... which Arduino maps to different numbers depending on the board
being used.
@note The adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() approach is currently set to work with
all channels on each kind of board. You can change the number of channels to use in
mozzi_analog.cpp by editing NUM_ANALOG_INPUTS if desired.
@note In some cases this method can cause glitches which may have to do with the ADC interrupt
interfering with the audio or control interrupts.  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__analog_8cpp_1a4ff48c11864f6a45d87a4619c31f14f2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'ISR';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
ADC_vect
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
ISR_BLOCK
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      func-mem-desc-line = '259';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__analog_8cpp_1a40a78cb85869f59e83c7bd88f0634288';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'sensors';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      var-mem-desc-line = '235';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__analog_8cpp_1aa157286808fa677b7bc25ab9d95e411a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'current_adc';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      var-mem-desc-line = '236';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__analog_8cpp_1ac42b5db9dd96f39f0c911455a8154029';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile boolean
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'readComplete';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= false
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
      var-mem-desc-line = '237';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__analog_8h';
  file-name = 'mozzi_analog.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gac9b066c792d2b822dcf518eef19a7c3e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcEnableInterrupt';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '76';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call this in setup() to enable reading analog inputs in the background while audio generating continues.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Then call adcReadAllChannels() at the end of each updateControl() and the results for each analog channel will be
available by calling adcGetResult(channel_num) next time updateControl() runs.
@note This method using adcEnableInterrupt(), adcReadAllChannels() and adcGetResult() is an easy and
efficient way to read analog inputs while generating sound with Mozzi. For many
sketches, however, simply putting setupFastAnalogRead() in setup() and calling
Arduino's usual analogRead() will work fast enough.
@note Don't use setupFastAnalogRead() with adcEnableInterrupt().
It may cause the ADC process to hog the processor, causing audio glitches.
@note In some cases this method can cause glitches which may have to do with the ADC
interrupt interfering with the audio or control interrupts. If this occurs, use
the adcStartConversion(), adcGetResult() methods instead.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gaf46803d06aa1d839192cc6125e39ff01';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'setupFastAnalogRead';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '88';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Make analogRead() faster than the standard Arduino version, changing the
duration from about 105 in unmodified Arduino to 15 microseconds for a
dependable analogRead().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Put this in setup() if you intend to use analogRead()
with Mozzi, to avoid glitches.
Don't use it with the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() approach, it may contribute to glitches.
See: http://www.arduino.cc/cgi-bin/yabb2/YaBB.pl?num=1208715493/11, and
http://www.marulaberry.co.za/index.php/tutorials/code/arduino-adc/
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gad4433797b75fedd473250e9aa414dcae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'disconnectDigitalIn';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '115';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Prepare an analog input channel by turning off its digital input buffer.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This helps to reduce noise, increase analog reading speed, and save power.

Here's more detail from http://www.openmusiclabs.com/learning/digital/atmega-adc/:

The DIDR (Data Input Disable Register) disconnects the digital inputs from
whichever ADC channels you are using. This is important for 2 reasons. First
off, an analog input will be floating all over the place, and causing the
digital input to constantly toggle high and low. This creates excessive noise
near the ADC, and burns extra power. Secondly, the digital input and associated
DIDR switch have a capacitance associated with them which will slow down your
input signal if you are sampling a highly resistive load.

And from the ATmega328p datasheet, p266:

When an analog signal is applied to the ADC pin and the digital input from
this pin is not needed, this bit should be written logic one to reduce power
consumption in the digital input buffer. Note that ADC named_pins ADC7 
and ADC6 do not have digital input buffers, and therefore do not require 
Digital Input Disable bits.
@param channel_num the analog input channel you wish to use.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gacd83735876cf223916ea4925ec4efd4a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'reconnectDigitalIn';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '123';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reconnect the digital input buffer for an analog input channel which has
been set for analog input with disconnectDigitalIn().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel_num the analog input channel you wish to reconnect.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga5042e7c576dd0307be38eb70efdb69fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcDisconnectAllDigitalIns';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '130';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Prepare all analog input channels by turning off their digital input buffers.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This helps to reduce noise, increase analog reading speed, and save power.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gabad497d1f8c8026e81849be0b65bf38f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcReconnectAllDigitalIns';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '137';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Reconnect the digital input buffers for analog input channels which have
been set for analog input with disconnectDigitalIn().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gae0d3533acb5fd56db8f7317e24bea6b5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcSetChannel';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '144';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set the channel or pin for the next analog input to be read from.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel or pin number.  If pin number is provided, adcSetChannel() will convert it to the channel number.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga8e081d7e359e219b7dce35538fcf3e39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcStartConversion';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'pin';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '160';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Starts an analog to digital conversion of the voltage at a specified pin.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Unlike
Arduino's analogRead() function which waits until a conversion is complete before
returning, adcStartConversion() only sets the conversion to begin, so you can use
the cpu for other things and call for the result later with adcGetResult().
This works well in updateControl(), where you can call adcStartConversion() and
get the result with adcGetResult() the next time the updateControl()
interrupt runs.
@param pin is the analog pin number (A0 to A...) or the channel number (0 to ....) to read.
@note This is the most audio-friendly way to read analog inputs,
but can be messier in your program than the the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() way.
@note Timing: about 1us when used in updateControl() with CONTROL_RATE 64.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gac3d2277d3d3823c6d5c727067571aab3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcStartConversion';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '167';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Starts the analog conversion on the pin or channel most recently set with adcSetChannel();.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1gaaf4320d2621e15ea704900ea26a8aa07';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcGetResult';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '182';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Waits for the result of the most recent adcStartConversion().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  If used as the first function
of updateControl(), to receive the result of adcStartConversion() from the end of the last
updateControl(), there will probably be no waiting time, as the ADC conversion will
have happened in between interrupts.  This is a big time-saver, since you don't have to
waste time waiting for analogRead() to return (1us here vs 105 us for standard Arduino).
@return The resut of the most recent adcStartConversion().
@note This is the most audio-friendly way to read analog inputs,
but can be messier in your program than the the adcEnableInterrupt(), adcReadAllChannels(), adcGetResult(byte) way.
@note Timing: about 1us when used in updateControl() with CONTROL_RATE 64.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga1d1ee9fa143c3a0505e76b41fc2af09f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcGetResult';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'channel_num';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '196';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This returns the most recent analog reading for the specified channel.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param channel_num The channels are plain numbers 0 to whatever your board goes up to, not the pin
labels A0 to A... which Arduino maps to different numbers depending on the board
being used.
@note The adcEnableInterrupt(), adcReadAllChannels(), adcGetResult() approach is currently set to work with
all channels on each kind of board. You can change the number of channels to use in
mozzi_analog.cpp by editing NUM_ANALOG_INPUTS if desired.
@note In some cases this method can cause glitches which may have to do with the ADC interrupt
interfering with the audio or control interrupts.  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga829091330473b48a8b9236d0be4b8755';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'adcReadAllChannels';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
      func-mem-desc-line = '233';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Call adcReadAllChannels() in updateControl() and the results for each channel
will be available by calling adcGetResult(channel_num) next time updateControl()
runs.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Reading will happen in the background, using a minimum of processor time
and without blocking other code.

More detail: adcReadAllChannels() starts an initial conversion which triggers an
interrupt when it's complete. The interrupt code stores the result in an array,
changes to the next channel and starts another conversion. When all the channels
have been sampled, the ISR doesn't start a new conversion, so it doesn't
re-trigger itself or use processor time until adcReadAllChannels() is called
again. At any time the latest conversion result for each channel is available by
calling adcGetResult(channel_num).
@note In some cases this method can cause glitches which may have to do with the ADC interrupt
interfering with the audio or control interrupts.  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_analog.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__config_8h';
  file-name = 'mozzi_config.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1ga9c4a39187db1d0a1ad0fa6981920f383';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_MODE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
STANDARD
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_config.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
AUDIO_MODE holds the audio mode setting.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Select STANDARD or HIFI audio output mode in the Mozzi/mozzi_config.h file with
\#define AUDIO_MODE STANDARD or \#define AUDIO_MODE HIFI
In Mozzi/config.h, comment one of these options in and the other out to set the audio mode.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1ga5b972bafb3267e820993812beca1b298';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_config.h';
      define-mem-desc-line = '56';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Holds the audio rate setting.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
AUDIO_RATE can be \#defined as 16384 or 32768 Hertz in Mozzi/mozzi_config.h. 

Mozzi's original audio mode, now called STANDARD, uses 16384 Hz, chosen as a
compromise between the sample rate (interrupt rate) and sample bitdepth (pwm
width), which are interdependent due to the way pulse wave modulation is used to
generate the sound output. An AUDIO_RATE of 32768 Hz only works in HIFI mode,
not in STANDARD mode because it doesn't give enough time for the full pwm
resolution to be reached in each cycle.

Another factor which is important for Mozzi's operation is that with AUDIO_RATE
being a power of two, some internal calculations can be highly optimised for
speed.

In STANDARD mode and with AUDIO_RATE at 16384, the sample resolution is 488,
which provides some headroom above the 8 bit table resolution currently used by
the oscillators. You can look at the TimerOne library for more info about how
interrupt rate and pwm resolution relate.

HIFI audio mode enables much higher quality output by combining signals from pins 9 and 10.
For HIFI mode, edit Mozzi/mozzi_config.h to contain \#define AUDIO_MODE HIFI, 
and comment out \#define AUDIO_MODE STANDARD.

HIFI mode also enables the choice of using a 32768 Hz audio rate.  Of course, doubling 
the sample rate (more than) halves the amount of time available to calculate the audio synthesis, so it
may only be useful for relatively simple sketches.  The increased frequency response can also make 
unwanted artefacts of low resolution synthesis calculations more apparent, so it's not always a bonus.

AUDIO_RATE is set in Mozzi/mozzi_config.h, where you can comment in or out the relevant lines, choosing
either \#define AUDIO_RATE 16384 or \#define AUDIO_RATE 32768.

\xrefitem todo 4.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1ga3417fc0b453af798a70340c912a4b657';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'USE_AUDIO_INPUT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
false
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_config.h';
      define-mem-desc-line = '66';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Whether or not to use audio input.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Put \#define USE_AUDIO_INPUT true in Mozzi/mozzi_config.h to enable audio input on analog pin 0,
otherwise make it false, to save resources.  When audio input is used, don't read 
other analog channels as they'll interfere with the audio sampling.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_config.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__fixmath_8cpp';
  file-name = 'mozzi_fixmath.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__fixmath_8cpp_1aba3a1d38c23a4499cfb219412d0b115b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteMod';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'd';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__fixmath_8cpp_1a0c6fd804408a6789f49d3f5e07340eb0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteDiv';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'd';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
      func-mem-desc-line = '24';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__fixmath_8cpp_1a004d96a59215139e911b92907c37fc22';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteRnd';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
byte
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
      func-mem-desc-line = '36';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga5daaf7f37651029de2abf8ad375b6850';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'ipow';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
      func-mem-desc-line = '50';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2e1d9d0fe4ba7edb9830efb7887c36bd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_pow2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exponent';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
      func-mem-desc-line = '89';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
This is a fast replacement for pow(2,x), where x is a fractional number in Q8n8
@endverbatim
fixed-point exponent.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It's less accurate than pow(2,x), but useful where a
tradeoff between accuracy and speed is required to keep audio from glitching.
@param exponent in Q8n8 format.
@return pow(2,x) in Q16n16 format.
\xrefitem todo 5.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__fixmath_8h';
  file-name = 'mozzi_fixmath.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga42c55269acbc41ca1fbcbb7aea5e8767';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q0n7_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q0n7) 127)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '62';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0.992 in Q0n7 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga1a04e29b3420231fc54039caf460a88c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q7n8_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q7n8) 256)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '63';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q7n8 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga00d3299412f5460cae3af8f0c58b2db1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q8n8_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q8n8) 256)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '64';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q8n8 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gaad55b32c6590a3e4bb07972a7acec4a9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q23n8_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q23n8) 256)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '65';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q23n8 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga6f99802ebadd6b1b3ee707892e36cab9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q1n14_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q1n14) 16384)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '66';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q1n14 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga8124fb8d1bcb111532f22726dbf3e5cc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q1n15_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q1n15) 32768)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '67';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q1n15 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gaa4538a17e7e75b14a5826405ad06acef';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q16n16_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q16n16) 65536)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '68';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q16n16 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga38ec011e7e3e08f5df091b608ce621e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q0n15_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q0n15) 32767)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '69';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0.999 in Q0n15 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gaa1e02cbcdc65171103653df03fec3b76';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q0n16_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q0n16) 65535)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '70';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0.999 in Q0n16 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gafa16db677f958c243a826695b2c14c3c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q15n0_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q15n0) 16384)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '71';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q15n0 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga7933033ba3cd84a4d09c0bd652378a38';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q15n16_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q15n16) 65536)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q15n16 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga5083b2bbeeb968258e2da31d3af26a25';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q8n24_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q8n24) 16777216)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '73';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
1 in Q8n24 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gacb7fad10f1c2b67504271149f8f1215f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q0n32_FIX1';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q0n32) 4294967295)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '74';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
0.999999999767169 in Q0n32 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gac065d8a968cb7c4dd713458682ee1308';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q3n13_2PI';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q3n13) 411775)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '76';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
2*PI in Q3n13 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga4bf1124c7bdac767263b2037211933e3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q16n16_2PI';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q16n16) 411775)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '77';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
2*PI in Q16n16 format
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1gac357561cf7360f82a264d90096d0126b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'low15bits';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
((Q1n15) 32767)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '79';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Useful for keeping the lower 15 bits of a Q1n15 number, using &.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__mozzi__fixmath_1ga4628b6ab7962076cb9e176a3d9739ac6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'Q7n8_multfix';
      define-mem-param  = {
        define-mem-def-name = 'a';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'b';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
({            \
int prod, val1=a, val2=b ;    \
__asm__ __volatile__ (    \
	"muls %B1, %B2	\n\t"   \
	"mov %B0, r0 \n\t"	   \
	"mul %A1, %A2\n\t"	   \
	"mov %A0, r1 \n\t"   \
	"mulsu %B1, %A2	\n\t"   \
	"add %A0, r0  \n\t"     \
	"adc %B0, r1 \n\t"     \
	"mulsu %B2, %A1	\n\t"   \
	"add %A0, r0 \n\t"     \
	"adc %B0, r1  \n\t"    \
	"clr r1  \n\t" 		   \
	: "=&d" (prod)     \
	: "a" (val1), "a" (val2)  \
	  );        \
  prod;        \
})
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      define-mem-desc-line = '314';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Fast (?) fixed point multiply for Q7n8 fractional numbers.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Interesting: this is slower than doing ((long)a*b)>>16.
Timing with an oscilloscope shows:
p = Q7n8_multfix(a,b); // 1.52ms
p = ((long)a*b)>>16;  // 560 to 640 us
@param a Q7n8 format multiplicand
@param b Q7n8 format multiplier
@return a Q7n8 format product
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga63ce3e8c0ab9757dd79f53811f6fed9c';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q0n7';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '39';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 7 fractional bits, represents -0.5 to 0.496
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga54e54f703dd3d1f7aa38d930885ac549';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q7n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '40';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
ordinary old signed Q7n0 char with 0 fractional bits, represents -128 to 127
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga8a02d4dea10140847682e78ba4bd6367';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q0n8';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '41';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 8 fractional bits, represents 0.0 to 0.996
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gaac3e4cab960e285ec7e2d8afd54a9dd9';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q8n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '42';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
normal unsigned char with 0 fractional bits, represents 0.0 to 255.0
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga6c7bab361e1738f385e3af1c8157eefb';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q0n16';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '43';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 16 fractional bits, represents 0.0 to 0.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gaa56966cb3ddcbb6d8e3b50e8497df9fc';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q0n31';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '44';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed number using 0 integer bits and 31 fractional bits, represents -32768 to 32767
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gac16a505e3f62bbfd9160e1d6bf83fa98';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q7n8';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '45';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 7 integer bits and 8 fractional bits, represents -127.996 to 127.996
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga755c5617a3e7b057740ad5c3e24be00e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q3n13';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '46';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 3 integer bits and 13 fractional bits, represents 0 to 7.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga065de9fcedeb97d94b2eaf0ae86f8b6a';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q1n14';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '47';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 1 integer bit and 14 fractional bits, represents -1.999 to 1.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga5b744a37ff9e070a302fa8f28950250e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q15n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '48';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed number using 15 integer bits and 0 fractional bits, represents -2147483648 to 2147483647
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga5ae84c3845de6126c16295e05599c163';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q8n8';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '49';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 8 integer bits and 8 fractional bits, represents 0 to 255.996
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga3e68ac7668fca01f7281a00cdecbc7ba';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q1n15';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '50';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 1 integer bit and 15 fractional bits, represents 0 to 1.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga5bbf61206b9d7c04c8816f8412f2522f';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q16n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '51';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned number using 16 integer bits and 0 fractional bits, represents 0 to 65536.0
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga0ac052d4a789286894814bb69638d04b';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q23n8';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '52';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 23 integer bits and 8 fractional bits, represents -8388607.996 to 8388607.996
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga27c6ece00a166ba3285bf7302c325e2e';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q15n16';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '53';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 15 integer bits and 16 fractional bits, represents -32767.999 to 32767.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gab57cc32156b75445f006f5f1ef3ca58a';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q31n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '54';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed (normal long int) number using 31 integer bits and 0 fractional bits, represents -2147483648 to 2147483647
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga8b7a6c03378536458f1b55774a8d38c2';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q32n0';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '55';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned (normal unsigned long int) number using 32 integer bits and 0 fractional bits, represents 0 to 4294967295
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gaa5d047aa73132f256dbf654b77044849';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q0n32';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '56';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned (normal unsigned long int) number using 0 integer bits and 32 fractional bits, represents 0 to 0.999999999767169
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga7cef68582c1933cc8249364720f848f1';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q8n24';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '57';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
signed fractional number using 8 integer bits and 24 fractional bits, represents 0 to 255.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1gaa8e579259244eb60e7f70576c8e61cbd';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q24n8';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '58';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 24 integer bits and 8 fractional bits, represents 0 to  16777215
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = 'group__mozzi__fixmath_1ga20ef71528ee7583bbf60586448b12caf';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'Q16n16';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      typedef-mem-desc-line = '59';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
unsigned fractional number using 16 integer bits and 16 fractional bits, represents 0 to 65535.999
_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga1e0eab490ffe9a47fd78bcc449e3b995';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n7
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q0n7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '99';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q0n7 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga00e21c6b9d75ed26cd3bf1b9f4f9482e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '102';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q0n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2a28dc262b3e79e0f67e4089cccaab45';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q7n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '105';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q7n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga36132b5f8f95223749b410ca235eef16';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q8n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '108';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q8n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga1aab8b66d6d6f370cc66d82968884d18';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q1n14
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q1n14';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '111';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q1n14 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga447e25c2d6c9bf14d8e324df0cc02753';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q1n15
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q1n15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '114';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q1n15 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga33ecb8a512f7d4eff5047d4ad65f5423';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q8n24';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '117';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q8n24 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2ca980a6d71eb894b07534b30d9b7a06';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q23n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '120';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q23n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaf91bc6123ecaff1441660d3abb20bf2e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q24n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '123';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q24n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga041d3ba65c131b9aa01b9f34ec439b71';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '126';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q16n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga4d20591828f0189963f1190f7197ba68';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q0n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '129';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q0n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga0e76f24ef8dfe0fa7510c4eea2608d5c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '132';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert float to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a float 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga468ddaa38e178b45a77e0c103da22b7c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q1n14
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n7_to_Q1n14';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n7
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '136';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n7 char to Q1n14 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n7 char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gac8b6733abac81f36cf8075a4d3c04e49';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n7_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n7
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '139';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n7 signed char to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n7 signed char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga8b01eb695e8d8c197e4e83a76d391a6a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n7_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n7
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '142';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n7 fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n7 char 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaa9c85bc32475856ed07c3780a237ba31';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q1n15
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q1n15';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '146';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q1n15 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga07cdd6c75045759d9d11116f5caea4bf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q8n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q8n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gac864675855d95314dd015ea52dc80135';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q8n24';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '152';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q8n24 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga77edd2a4cd49df42e7145da9bdb799ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q24n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '155';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q24n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gad224b917b591bfa3554a958e84f8fadf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '158';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gab13c5f790423d9a0cf10445b366933fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '161';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 unsigned char to Q16n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gade631f0534cf54fadbff65911809d927';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n8_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '164';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q0n8 fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n8 unsigned char 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga81b0b1f295a6a724c100e600d6b4ce28';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q7n0_to_Q7n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q7n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '168';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q7n0 char to Q7n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a char 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga4baa8569c241630ddd25d798d0a89b3d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n0_to_Q7n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '171';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n0 unsigned char to Q7n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n0 unsigned char*.  Beware of overflow.  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga90a5d59d5a529f4caaf408730230a156';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n0_to_Q8n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '174';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert unsigned char to Q8n8 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n0 unsigned char 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gac0b4678c510db93302efb15497911907';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n0_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '177';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n0 unsigned char to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n0 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga589b5c022b59a72fc3fb39061048d193';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n0_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '180';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n0 unsigned char to Q16n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n0 unsigned char  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaa8be90cc674fc9ac72a2faafb11d6a5e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q7n8_to_Q7n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '184';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q7n8 fix to Q7n0.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q7n8 int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaad3cbbc6a772d246d26fd98b5a079382';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q7n8_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '187';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q7n8 fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q7n8 int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gad68e3b4d1bf65e997d5e709eb4153572';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q8n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n8_to_Q8n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '191';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n8 fix to Q8n0 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n8 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gab88fd86b4f226f0e2614b0ac813e4cad';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n8_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '194';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n8 fix to Q16n16 unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n8 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gabc9c251c25fa7a239d704ea3998e7e39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n8_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '197';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n8 fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n8 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga5f3733fb89e77693e54328375226f5e9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n7
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q1n14_to_Q0n7';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q1n14
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '200';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q1n14 fixed to Q0n7 char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q1n14 int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gad3fe2bc17bed17cd159a9c030145b6ca';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q1n14_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q1n14
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '203';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is an int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga67c11990c9288aa762c708d3a48ba7fc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q1n15_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q1n15
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '206';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q1n15 fixed to Q0n8 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Only for  positive values!@param a is a Q1n15 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga9ed5a6a2041f490ffa52b5a5fa95d3e5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q1n15_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q1n15
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '209';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q1n15 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga0440dbc7692a88dca7b1173f020c9b0d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q0n16_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q0n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '212';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q0n16 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga8ef5b17eaddb22228824829204ee71bb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n0_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '215';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q15n0 int to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q15n0 int  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga720cdc234e4d0979753e5aef22a93e11';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n0_to_Q15n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '218';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n0 unsigned int to Q15n16 fix.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n0 unsigned int  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaab7cd08af1c66dd48873f9a5645cc95e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n0_to_Q23n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '221';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n0 unsigned int to Q23n8 fixed point signed long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n0 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga779f365fbc3378a0e8cc167d44fd7aad';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n0_to_Q24n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '224';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n0 unsigned int to Q24n8 fixed point unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n0 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gac193b97057ac01de898db661cb6d1c5d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n0_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '227';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n0 unsigned int to Q16n16 fixed point unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n0 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga990f68566b105bc35ed718ad5ef93d72';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n0_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '230';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n0 unsigned int to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n0 unsigned int 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga0c5065bc7c71ac750acde1c7ce216d87';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n24_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '235';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q8n24 fixed to Q0n8 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n24 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga6f0e36938a7dfae4ab399f17642c2bcd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q8n24_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n24
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '238';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q8n24 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga8f3d1181dc6802782b9ff9aa59ca96a2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q31n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q23n8_to_Q31n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '242';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q23n8 fixed to Q31n0 long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q23n8 long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaa6a3087e0119ed233a3256f8fa25e146';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q23n8_to_Q16n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q23n8 fixed to Q16n0 unsigned int.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Positive values only.@param a is a Q23n8 long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga1b21d30a04f07940dc4ea206533b9dd8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q23n8_to_Q15n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '248';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q23n8 fixed to Q15n0 signed int.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q23n8 long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gac243a1fd2154b115e4ba39a70125675e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q23n8_to_Q7n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '251';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q23n8 fixed to Q7n8 signed int, losing most significant bits.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q23n8 signed long. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga47738704056a272968e80b399e06e82b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q23n8_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '255';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q23n8 signed long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga94dd6fe8594b171881ade98431dfda28';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q24n8_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '259';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q24n8 fixed to Q0n8 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q24n8 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaefdfa391a9fef0f17d1f9df16fd9a9f0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q24n8_to_Q16n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '263';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q24n8 fixed to Q16n0 unsigned int.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q24n8 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga9f28b2310c92ecac72960d9bd0aff80f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q32n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q24n8_to_Q32n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '267';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q24n8 fixed to Q32n0 unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q24n8 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2b445681d56f8693c3d98d5ff19b51d4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q24n8_to_Q16n16';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '270';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q24n8 fixed to Q16n16 unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q24n8 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gab495892ee3db6cbce186fbb7c7246088';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q24n8_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '273';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q24n8 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaf8dd8621335948f9048742f0a59dc795';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n16_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '277';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q15n16 fixed to Q0n8 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Only for  positive values!@param a is a Q15n16 signed long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gaa2ec03187910e9c6418298ef55655c36';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q15n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n16_to_Q15n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '280';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q15n16 fixed to Q15n0 signed int.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q15n16 signed long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga21d72d50bd41022755514c96c2d11901';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q7n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n16_to_Q7n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '283';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q15n16 fixed to Q7n8 signed int, keeping middle bits only.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q15n16 signed long. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga67b0f3ae70755ed8891e510b02813c08';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q23n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n16_to_Q23n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '286';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q15n16 fixed to Q23n8 signed long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q15n16 signed long. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga4096449c3f0598a1534255de789d2ee5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q15n16_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q15n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '289';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q15n16 signed long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga1315b4f68a57d26fbedc88d5b30a44d8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q0n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_to_Q0n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '293';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n16 fixed to Q0n8 unsigned char.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n16 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga89bdabdfd59a8ec3f06aedbbab087527';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n0
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_to_Q16n0';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '296';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n16 fixed to Q16n0 unsigned int.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n16 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga17dd8cb80ef87b6573926e411618105a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q24n8
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_to_Q24n8';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '299';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert Q16n16 fixed to Q24n8 unsigned long.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n16 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gafcb57f2d0fdcce65b60401f47b871d14';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_to_float';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'a';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '302';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Convert fix to float.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param a is a Q16n16 unsigned long 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga5daaf7f37651029de2abf8ad375b6850';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'ipow';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'base';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exp';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '537';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2e1d9d0fe4ba7edb9830efb7887c36bd';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_pow2';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q8n8
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'exponent';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '542';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
This is a fast replacement for pow(2,x), where x is a fractional number in Q8n8
@endverbatim
fixed-point exponent.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 It's less accurate than pow(2,x), but useful where a
tradeoff between accuracy and speed is required to keep audio from glitching.
@param exponent in Q8n8 format.
@return pow(2,x) in Q16n16 format.
\xrefitem todo 5.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga92853d82934fc5f363a2b005159f497e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteMod';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'd';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '545';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1ga2fd5059a2a33bb5af84e4aa1913164f0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteDiv';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'd';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '546';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__mozzi__fixmath_1gabf67580ab264b89b6c38438ddbdf1839';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'byteRnd';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'min';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'max';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
      func-mem-desc-line = '547';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_fixmath.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__midi_8cpp';
  file-name = 'mozzi_midi.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1gafacb8849f96270644ea79184fde7db37';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midival';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts midi note number to frequency.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Caution: this can take up to 400
microseconds to run. It can seriously mess up the audio output if you use it in
updateControl() or updateAudio(). This is a good choice in setup(), or where you
need precise midi-pitch conversion and aren't doing much other audio
calculation.
@note Beware this returns an invalid result for midi note 0.
@note Timing: ~350 us
@param midival a midi note number, 1.0 or greater.  Like the mtof object in Pd, midi values can have fractions.
@return the frequency represented by the input midi note number..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga692b0625657a7fba9c0ef5feaa7f8772';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static const uint32_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
      func-mem-desc-line = '97';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts midi note number to frequency.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Fast, but only accepts whole note values, no fractions.
@param midival a midi note number.  Unlike the mtof object in Pd, midi values can have fractions.  Use mtof() or
Q16n16_mtof() if you want to convert fractional midi values.
@return the frequency represented by the input midi note number.
\xrefitem todo 6.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga45bd3f3abd7ae5fa509eac3d3931a5b2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midival_fractional';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
      func-mem-desc-line = '131';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts midi note number to frequency with speed and accuracy.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Q16n16_mtofLookup() is a fast
alternative to (float) mtof(), and more accurate than (unsigned char) mtof(),
using Q16n16 fixed-point format instead of floats or byte values. Q16n16_mtof()
uses cheap linear interpolation between whole midi-note frequency equivalents
stored in a lookup table, so is less accurate than the float version, mtof(),
for non-whole midi values.
@note Timing: ~8 us.
@param midival a midi note number in Q16n16 format, for fractional values.
@return the frequency represented by the input midi note number, in Q16n16
fixed point fractional integer format, where the lower word is a fractional value.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga1acfdfdb13a82ffd95281a78ceea9c66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midi_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
      func-mem-desc-line = '155';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A good choice if you're using whole note values, want speed and simplicity, and accuracy isn't important.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param midi_note a midi note number.
@return an integer approximation of the midi note's frequency.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga3d63d1bf049f14ba73a21475d3aa339c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midi_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
      func-mem-desc-line = '165';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A good choice if you're using whole note values, want speed and simplicity, and accuracy isn't important.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param midi_note a midi note number.
@return an integer approximation of the midi note's frequency.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__midi_8h';
  file-name = 'mozzi_midi.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1gafacb8849f96270644ea79184fde7db37';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
float
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'x';
        func-mem-param-defname = 'midival';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.h';
      func-mem-desc-line = '10';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts midi note number to frequency.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 Caution: this can take up to 400
microseconds to run. It can seriously mess up the audio output if you use it in
updateControl() or updateAudio(). This is a good choice in setup(), or where you
need precise midi-pitch conversion and aren't doing much other audio
calculation.
@note Beware this returns an invalid result for midi note 0.
@note Timing: ~350 us
@param midival a midi note number, 1.0 or greater.  Like the mtof object in Pd, midi values can have fractions.
@return the frequency represented by the input midi note number..
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga1acfdfdb13a82ffd95281a78ceea9c66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midi_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.h';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A good choice if you're using whole note values, want speed and simplicity, and accuracy isn't important.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param midi_note a midi note number.
@return an integer approximation of the midi note's frequency.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga3d63d1bf049f14ba73a21475d3aa339c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midi_note';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.h';
      func-mem-desc-line = '12';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A good choice if you're using whole note values, want speed and simplicity, and accuracy isn't important.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param midi_note a midi note number.
@return an integer approximation of the midi note's frequency.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__midi_1ga45bd3f3abd7ae5fa509eac3d3931a5b2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'Q16n16_mtof';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
Q16n16
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'midival';
        func-mem-param-defname = 'midival_fractional';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.h';
      func-mem-desc-line = '13';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Converts midi note number to frequency with speed and accuracy.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
  Q16n16_mtofLookup() is a fast
alternative to (float) mtof(), and more accurate than (unsigned char) mtof(),
using Q16n16 fixed-point format instead of floats or byte values. Q16n16_mtof()
uses cheap linear interpolation between whole midi-note frequency equivalents
stored in a lookup table, so is less accurate than the float version, mtof(),
for non-whole midi values.
@note Timing: ~8 us.
@param midival a midi note number in Q16n16 format, for fractional values.
@return the frequency represented by the input midi note number, in Q16n16
fixed point fractional integer format, where the lower word is a fractional value.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_midi.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__rand_8cpp';
  file-name = 'mozzi_rand.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaf2deee83847f1fcee2c859d97bd072f6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xorshift96';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Random number generator.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 A faster replacement for Arduino's random function,
which is too slow to use with Mozzi.  
Based on Marsaglia, George. (2003). Xorshift RNGs. http://www.jstatsoft.org/v08/i14/xorshift.pdf
@return a random 32 bit integer.
\xrefitem todo 7.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga84c58d758e238208eb82fc8ae2330b66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randSeed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'seed';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '44';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialises Mozzi's (pseudo)random number generator xorshift96(), which is used
in Mozzi's rand() function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be useful if you want random sequences to
be different on each run of a sketch, by seeding with fairly random input, such
as analogRead() on an unconnected pin (as explained in the Arduino documentation
for randomSeed(). randSeed is the same as xorshift96Seed(), but easier to
remember. 
@param seed a number to use as a seed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__rand_8cpp_1af8768a3643942a844d7d4db9da794802';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static long
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'longRandom';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '80';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga83ff6b4e38c84713e0d67aa1ec06af66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randSeed';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '108';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialises Mozzi's (pseudo)random number generator xorshift96(), which is used
in Mozzi's rand() function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be useful if you want random sequences to
be different on each run of a sketch, by seeding with a fairly random input.
randSeed() called without a parameter uses noise from reading the Arduino's
internal temperature as the seed, a technique discussed at
http://arduino.cc/forum/index.php/topic,38091.0.html, borrowing code put there
by Rob Tillaart.
@note IMPORTANT!!!  Make sure you set analogReference() to suit your sketch after calling randSeed().  
randSeed() sets analogReference to DEFAULT.  Sorry about that.
@note This is quite slow, so best to call it only in setup().
@note It's not perfect, as discussed in the forum thread, but probably a pretty good option.
@note It might only work with some processors: (from the thread)
"...ATmega328P in DIP, possibly others but the duemilanove and uno will do it at least."
So far, gizduino's <strong>AVR_ATmega644P</strong> chip doesn't like it, so we use (long)analogRead(0)*analogRead(1) for that instead. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaf7117eb5e1e0676c276be7094ce30ab7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xorshiftSeed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
long
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'seed';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '124';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialises Mozzi's (pseudo)random number generator xorshift96().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be
useful if you want random sequences to be different on each run of a sketch, by
seeding with fairly random input, such as analogRead() on an unconnected pin (as
explained in the Arduino documentation for randomSeed().
@param seed a number to use as a seed.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gacd4bfc9e040d0090b9321f43a6297e21';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '137';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum signed byte value of the range to be chosen from. Minval will be the minimum value possibly returned by the function. 
@param maxval the maximum signed byte value of the range to be chosen from. Maxval-1 will be the largest value possibly returned by the function. 
@return a random char between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga91590455565d619314812a7f95fcd9e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum unsigned byte value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum unsigned byte value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned char between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4c69deb53afb886b26c76b343513b340';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '161';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum signed int value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum signed int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random int between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga95de742b529d5965461f1d3f6f576e18';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '173';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum unsigned int value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum unsigned int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned int between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaa0c23ec434d09717e1fe2e8363e689bc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '184';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum signed byte value of the range to be chosen from.  Maxval-1 will be the largest value  possibly returned by the function.
@return a random char between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4bfcc7c200e26fff41a2af61c9ea1a9f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '195';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum unsigned byte value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned char between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga1182cb74988d9c8510959149adc63762';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '206';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum signed int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random int between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4ad4ab94c8b0e8a4d4be925490378733';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '217';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum unsigned int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned int between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga5c14e59f9bdf24917b6db63be89a2180';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randMidiNote';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      func-mem-desc-line = '227';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Generates a random number in the range for midi notes.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@return a random value between 0 and 127 inclusive
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__rand_8cpp_1a3539f71fd772fb26bff625c8ec793564';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned long
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'x';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=132456789
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__rand_8cpp_1ae5c6479412433fd5a775c5cd3caf7865';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned long
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'y';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=362436069
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'mozzi__rand_8cpp_1a48e5760e5da92b0b32c65cae6a1c31d7';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned long
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'z';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
=521288629
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
      var-mem-desc-line = '4';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__rand_8h';
  file-name = 'mozzi_rand.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaf2deee83847f1fcee2c859d97bd072f6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xorshift96';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Random number generator.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 A faster replacement for Arduino's random function,
which is too slow to use with Mozzi.  
Based on Marsaglia, George. (2003). Xorshift RNGs. http://www.jstatsoft.org/v08/i14/xorshift.pdf
@return a random 32 bit integer.
\xrefitem todo 7.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__rand_8h_1a34956c2687a09ae6e3e7b9e632a09f18';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'xorshiftSeed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'seed';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__rand_8h_1a8a9592250ee294a64c6d133e20520651';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randSeed';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'seed';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga83ff6b4e38c84713e0d67aa1ec06af66';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randSeed';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Initialises Mozzi's (pseudo)random number generator xorshift96(), which is used
in Mozzi's rand() function.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This can be useful if you want random sequences to
be different on each run of a sketch, by seeding with a fairly random input.
randSeed() called without a parameter uses noise from reading the Arduino's
internal temperature as the seed, a technique discussed at
http://arduino.cc/forum/index.php/topic,38091.0.html, borrowing code put there
by Rob Tillaart.
@note IMPORTANT!!!  Make sure you set analogReference() to suit your sketch after calling randSeed().  
randSeed() sets analogReference to DEFAULT.  Sorry about that.
@note This is quite slow, so best to call it only in setup().
@note It's not perfect, as discussed in the forum thread, but probably a pretty good option.
@note It might only work with some processors: (from the thread)
"...ATmega328P in DIP, possibly others but the duemilanove and uno will do it at least."
So far, gizduino's <strong>AVR_ATmega644P</strong> chip doesn't like it, so we use (long)analogRead(0)*analogRead(1) for that instead. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gacd4bfc9e040d0090b9321f43a6297e21';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '20';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum signed byte value of the range to be chosen from. Minval will be the minimum value possibly returned by the function. 
@param maxval the maximum signed byte value of the range to be chosen from. Maxval-1 will be the largest value possibly returned by the function. 
@return a random char between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaa0c23ec434d09717e1fe2e8363e689bc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '21';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum signed byte value of the range to be chosen from.  Maxval-1 will be the largest value  possibly returned by the function.
@return a random char between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga91590455565d619314812a7f95fcd9e7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '23';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum unsigned byte value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum unsigned byte value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned char between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4bfcc7c200e26fff41a2af61c9ea1a9f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '24';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum unsigned byte value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned char between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4c69deb53afb886b26c76b343513b340';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '26';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum signed int value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum signed int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random int between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga1182cb74988d9c8510959149adc63762';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '27';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum signed int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random int between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga95de742b529d5965461f1d3f6f576e18';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'minval';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '29';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param minval the minimum unsigned int value of the range to be chosen from.  Minval will be the minimum value possibly returned by the function.
@param maxval the maximum unsigned int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned int between minval and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1ga4ad4ab94c8b0e8a4d4be925490378733';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'rand';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'maxval';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '30';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Ranged random number generator, faster than Arduino's built-in random function, which is too slow for Mozzi.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@param maxval the maximum unsigned int value of the range to be chosen from.  Maxval-1 will be the largest value possibly returned by the function.
@return a random unsigned int between 0 and maxval-1 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'mozzi__rand_8h_1ad050d410cd0b96e6e0d76d94623e43b6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randomMidiNote';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
      func-mem-desc-line = '32';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_rand.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mozzi__utils_8h';
  file-name = 'mozzi_utils.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mozzi__utils_8h_1ae70baf5399951da1e7ad45a0ed890832';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'cbi';
      define-mem-param  = {
        define-mem-def-name = 'sfr';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'bit';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_SFR_BYTE(sfr) &= ~_BV(bit))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mozzi__utils_8h_1ac4a5536d9bf092116f88b94797ddc882';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sbi';
      define-mem-param  = {
        define-mem-def-name = 'sfr';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'bit';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_SFR_BYTE(sfr) |= _BV(bit))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__util_1gad1725ef17b234c4df9cc64a9bf561435';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'setPin13Out';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set digital pin 13 to output for testing timing with an oscilloscope.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__util_1gaea7ee11e335eb2d6b891b886c5f3f942';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'setPin13High';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
      func-mem-desc-line = '28';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set pin 13 high for testing timing with an oscilloscope.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__util_1ga4c87d0211135fd33a8697350235b50b4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'setPin13Low';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
      func-mem-desc-line = '37';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Set pin 13 low for testing timing with an oscilloscope.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mozzi_utils.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_mozzi_guts_8cpp';
  file-name = 'MozziGuts.cpp';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_mozzi_guts_8cpp_1ae0ff2ce3329f62bb39166d246475e8a3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BUFFER_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      define-mem-desc-line = '54';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_mozzi_guts_8cpp_1aee9d13ecc109c3e41e8334732f19813a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'backupPreMozziTimer1';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '74';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_mozzi_guts_8cpp_1af1a0a0bd0ab3f16602e00e31de40ec36';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'backupMozziTimer1';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '98';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga2fca37b988ab369e2f3c3108c683e59d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'audioHook';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '149';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is required in Arduino's loop().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 If there is room in Mozzi's output buffer,
audioHook() calls updateAudio() once and puts the result into the output
buffer.  Also, if \#define USE_AUDIO_INPUT true is in Mozzi/mozzi_config.h,
audioHook() takes care of moving audio input from the input buffer so it can be
accessed with getAudioInput() in your updateAudio() routine.
If other functions are called in loop() along with audioHook(), see if
they can be called less often by moving them into updateControl(), 
to save processing power. Otherwise it may be most efficient to
calculate a block of samples at a time by putting audioHook() in a loop of its
own, rather than calculating only 1 sample for each time your other functions
are called.
\xrefitem todo 9.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_mozzi_guts_8cpp_1a4c89a145f634f15993504009dd73f67b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'startAudioStandard';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '178';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_mozzi_guts_8cpp_1ae4bb889d011ea82c5218b8d671716f51';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'ISR';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
TIMER1_OVF_vect
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
ISR_BLOCK
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '196';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = '_mozzi_guts_8cpp_1a50150a6d5e67a5c22c47d757e1bad623';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'startControl';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'control_rate_hz';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '321';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga75aa9f4a501f4b167343b8caac8c6837';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'startMozzi';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'control_rate_hz';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '340';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets up the timers for audio and control rate processes, storing the timer
registers so they can be restored when Mozzi stops.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 startMozzi() goes in your sketch's
setup() routine.

In STANDARD and HIFI modes, Mozzi uses Timer 0 for control interrupts 0, disabling Arduino
delay(), millis(), micros() and delayMicroseconds. 
For delaying events, you can use Mozzi's EventDelay() unit instead (not to be confused with AudioDelay()). 

In STANDARD mode, startMozzi() starts Timer 1 for PWM output and audio output interrupts,
and in HIFI mode, Mozzi uses Timer 1 for PWM and Timer2 for audio interrupts. 

The audio rate is currently fixed at 16384 Hz.

@param control_rate_hz Sets how often updateControl() is called. It can be any
power of 2 above and including 64. The practical upper limit for control rate
depends on how busy the processor is, and you might need to do some tests to
find the best setting. 

It's good to define CONTROL_RATE in your
sketches (eg. \#define CONTROL_RATE 128) because the literal numeric value is
necessary for Oscils to work properly, and it also helps to keep the
calculations in your sketch clear.

\xrefitem todo 8.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga0dc2dc3b2c20b081df4d55ad039f64e5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'pauseMozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '351';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Stops audio and control interrupts and restores the timers to the values they
had before Mozzi was started.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This will enable the standard Arduino time
functions millis(), micros(), delay(), and delayMicroseconds(). This could be
useful when using sensor libraries which depend on the same timers as Mozzi. 

A potentially better option for resolving timer conflicts involves using
non-blocking methods, such as demonstrated by the twowire_nonblock code in the
forked version of Mozzi on github, so sound production can continue while
reading sensors.

As it is, pauseMozzi restores all the Timers used by Mozzi to their previous
settings. Another scenario which could be easily hacked in MozziGuts.cpp could
involve individually saving and restoring particular Timer registers depending
on which one(s) are required for other tasks, so for example the control
interrupt (Timer 0) could be suspended while audio continues. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga1718c5f0bbb56cc4b2db55702750f43f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'unPauseMozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '386';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Restores Mozzi audio and control interrupts, if they have been temporarily
disabled with pauseMozzi().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This once more takes over Timer 0, and stops the
Arduino time functions millis(), micros(), delay(), and delayMicroseconds() from
working.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1gaaa6a42d80c5297407a45ca8bf3c1c7fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mozziMicros';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      func-mem-desc-line = '421';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A replacement for Arduino micros() which is disabled by Mozzi which takes over
Timer 0 for control interrupts.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 mozziMicros is updated each time an audio sample
is output, so the resolution is 1/AUDIO_RATE (61 microseconds when AUDIO_RATE is
16384 Hz).
@return the approximate number of microseconds since the program began.
\xrefitem todo 10.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1af8ba4a729e0fdacfc9bef52669b29bc7';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'output_buffer';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '55';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1aa4944c8a0150d14b568edcc1ea3c24e1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile unsigned long
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'output_buffer_tail';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '56';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a704d267fe9559c128316739547ab8356';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TCCR0A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a8c2e1ad68c676fcdc406d63a7cf80ce4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TCCR0B';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a628fca02f2128ee366ffb6df29806b81';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_OCR0A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a2412ec67d39e442759d80d024d7f871d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TIMSK0';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1ab5fd88d1f25f6fa6835935972abef4c6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TCCR1A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '62';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a5ed50f7086115b046d0a1b3dea3c31a3';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TCCR1B';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '62';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a9b092bb7c8141e1cc39eb35c1716dd48';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_OCR1A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '62';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a9dff539b2aa75a9bf353479c2faf334a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'pre_mozzi_TIMSK1';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '62';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a4d9a7a9071ba76a77992411c6084711a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TCCR0A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '85';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a16f8b510e72336134b31031701c61ba6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TCCR0B';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '85';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a101c4bef1052150e1edb6a501e47c184';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_OCR0A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '85';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1ac1620486706157067de58bfb4e7e516d';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TIMSK0';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '85';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1aa83827815a8a81f9bab895549665f9ae';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TCCR1A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '86';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a80e988507dd80b37727bf7a72c29a8e4';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TCCR1B';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '86';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1ab7cab20baf77fed95356624f9fd3adf8';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_OCR1A';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '86';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = '_mozzi_guts_8cpp_1a847fda860ad961d387cc85a368fe87fd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static byte
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'mozzi_TIMSK1';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
      var-mem-desc-line = '86';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_mozzi_guts_8h';
  file-name = 'MozziGuts.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1gae5d737db8bc97ecf08d2ea3121782d26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CONTROL_RATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
64
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      define-mem-desc-line = '89';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Control rate setting.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Mozzi's CONTROL_RATE sets how many times per second updateControl() is called.
It can be any power of 2 greater than 64, and the largest value where it starts
to become impractical is around 1024. 64, 128, 256 and sometimes 512 are all
usable values. Try to keep it as low as you can, for efficiency, though higher
rates can sometimes give smoother results, avoiding the need to interpolate
sensitive variables at audio rate in updateAudio(). CONTROL_RATE has a default
of 64 Hz, but it can be changed at the top of your sketch, after the \#includes,
for example: \#define CONTROL_RATE 256
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1ga0b8ca8ad62b88c01b639bad62eafcbf1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'STANDARD';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      define-mem-desc-line = '121';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Used to set AUDIO_MODE to STANDARD.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Use \#define AUDIO_MODE STANDARD in Mozzi/config.h to select Mozzi's original audio
output configuration, which is nearly 9 bit sound (-244 to 243) at 16384 Hz and
16384 Hz pwm rate. It uses Timer 1 to output samples at AUDIO_RATE 16384 Hz,
with an interrupt being called once every PWM cycle to set the timer's own pwm
level.

Advantages: Only uses one timer for audio, and one output pin
Disadvantages: low dynamic range, some people can hear pwm carrier frequency, may need simple hardware filter.

Below is a list of the Digital Pins used by Mozzi for STANDARD mode PWM audio out on different boards.
Those which have been tested and reported to work have an x.
Feedback about others is welcome.

x....9........Arduino Uno \n
x....9........Arduino Duemilanove \n 
x....9........Arduino Nano  \n
x....9........Arduino Leonardo  \n
x....9........Ardweeny  \n
x....9........Boarduino  \n 
x...11.......Freetronics EtherMega  \n
x...11.......Arduino Mega  \n
....14........Teensy  \n
x..B5........Teensy2  \n
x..B5(25)..Teensy2++  \n
....13          .......Sanguino  \n
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'group__core_1gae99eb43cb29bb03d862ae829999916c4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HIFI';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      define-mem-desc-line = '178';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Used to set AUDIO_MODE to HIFI.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
Use \#define AUDIO_MODE HIFI in Mozzi/config.h to set the audio mode to HIFI for output 14 bit sound at 16384 Hz sample rate and 125kHz PWM rate.
The high PWM rate of HIFI mode places the carrier frequency beyond audible range, 
overcoming one of the disadvantages of STANDARD mode.

Also, 14 bits of dynamic range in HIFI mode provides more definition than the nearly 9 bits in STANDARD mode.
HIFI mode takes about the same amount of processing time as STANDARD mode, and sounds clearer and brighter.
However, it requires an extra timer to be used on the Arduino, which could increase the chances of 
conflicts with other libraries or processes if they rely on Timer 2.

Timer 1 is used to provide the PWM output at 125kHz.
Timer 2 generates an interrupt at AUDIO_RATE 16384 Hz, which sets the Timer1 PWM levels.
HIFI mode uses 2 output pins, and sums their outputs with resistors, so is slightly less convenient for 
rapid prototyping where you could listen to STANDARD mode by connecting the single output pin 
directly to a speaker or audio input (though a resistor of about 100 ohms is recommended).

The resistors needed for HIFI output are 3.9k and 1M, with 1% or better tolerance.
Use a multimeter to test a group of 1% resistors to find the most accurate.

On 328 based Arduino boards, output is on Timer1, with the low byte on Pin 10 and high byte on Pin 9.
Add the signals through a 3.9k resistor on high byte pin (9) and 1M resistor on low byte pin (10).
Also, a 4.7nF capacitor is recommended between the summing junction of the resistors and ground.

This dual PWM technique is discussed on http://www.openmusiclabs.com/learning/digital/pwm-dac/dual-pwm-circuits/
Also, there are higher quality output circuits are on the site.

Advantages: higher quality sound than STANDARD mode.  Doesn't need a notch filter on 
the audio signal because the carrier frequency is out of hearing range.

Disadvantages: requires 2 pins, 2 resistors and a capacitor, so it's not so quick to set up compared 
to a rough, direct single-pin output in STANDARD mode.

Pins and where to put the resistors on various boards for HIFI mode.  
Boards tested in HIFI mode have an x, though most of these have been tested in STANDARD mode
and there's no reason for them not to work in HIFI (unless the pin number is wrong or something).
Any reports are welcome. \n

resistor.....3.9k......1M \n
x................9..........10...............Arduino Uno \n
x................9..........10...............Arduino Duemilanove \n 
x................9..........10...............Arduino Nano  \n
x................9..........10...............Arduino Leonardo  \n
x................9..........10...............Ardweeny  \n
x................9..........10...............Boarduino  \n 
x...............11.........12...............Freetronics EtherMega  \n
.................11.........12...............Arduino Mega  \n
.................14.........15...............Teensy  \n
.............B5(14)...B6(15)...........Teensy2  \n
x...........B5(25)...B6(26)...........Teensy2++  \n
.................13.........12...............Sanguino  \n
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_mozzi_guts_8h_1a4185aa30186b5d63775b5e1d50df1df9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'AUDIO_RATE_AS_LSHIFT';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
14
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      define-mem-desc-line = '187';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_mozzi_guts_8h_1a25f09c512cd3a187d19eb7fd1d54d558';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MICROS_PER_AUDIO_TICK';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
61
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      define-mem-desc-line = '188';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    typedef = {
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = '_mozzi_guts_8h_1a65f85814a8290f9797005d3b28e7e5fc';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned char
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'uchar';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      typedef-mem-desc-line = '202';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = '_mozzi_guts_8h_1a91ad9478d81a7aaf2593e8d9c3d06a14';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'uint';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      typedef-mem-desc-line = '203';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    typedef-member = {
      typedef-mem-kind = 'typedef';
      typedef-mem-id   = '_mozzi_guts_8h_1a718b4eb2652c286f4d42dc18a8e71a1a';
      typedef-mem-virt = normal;
      typedef-mem-prot = public;
      typedef-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      typedef-mem-name = 'ulong';
      typedef-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      typedef-mem-desc-line = '204';
      typedef-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      typedef-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* typedef-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga75aa9f4a501f4b167343b8caac8c6837';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'startMozzi';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'control_rate_hz';
        func-mem-param-defval = <<_EnD_oF_dEf_TeXt_
CONTROL_RATE
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '236';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Sets up the timers for audio and control rate processes, storing the timer
registers so they can be restored when Mozzi stops.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 startMozzi() goes in your sketch's
setup() routine.

In STANDARD and HIFI modes, Mozzi uses Timer 0 for control interrupts 0, disabling Arduino
delay(), millis(), micros() and delayMicroseconds. 
For delaying events, you can use Mozzi's EventDelay() unit instead (not to be confused with AudioDelay()). 

In STANDARD mode, startMozzi() starts Timer 1 for PWM output and audio output interrupts,
and in HIFI mode, Mozzi uses Timer 1 for PWM and Timer2 for audio interrupts. 

The audio rate is currently fixed at 16384 Hz.

@param control_rate_hz Sets how often updateControl() is called. It can be any
power of 2 above and including 64. The practical upper limit for control rate
depends on how busy the processor is, and you might need to do some tests to
find the best setting. 

It's good to define CONTROL_RATE in your
sketches (eg. \#define CONTROL_RATE 128) because the literal numeric value is
necessary for Oscils to work properly, and it also helps to keep the
calculations in your sketch clear.

\xrefitem todo 8.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga0dc2dc3b2c20b081df4d55ad039f64e5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'pauseMozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '256';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Stops audio and control interrupts and restores the timers to the values they
had before Mozzi was started.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This will enable the standard Arduino time
functions millis(), micros(), delay(), and delayMicroseconds(). This could be
useful when using sensor libraries which depend on the same timers as Mozzi. 

A potentially better option for resolving timer conflicts involves using
non-blocking methods, such as demonstrated by the twowire_nonblock code in the
forked version of Mozzi on github, so sound production can continue while
reading sensors.

As it is, pauseMozzi restores all the Timers used by Mozzi to their previous
settings. Another scenario which could be easily hacked in MozziGuts.cpp could
involve individually saving and restoring particular Timer registers depending
on which one(s) are required for other tasks, so for example the control
interrupt (Timer 0) could be suspended while audio continues. 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga1718c5f0bbb56cc4b2db55702750f43f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'unPauseMozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '266';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Restores Mozzi audio and control interrupts, if they have been temporarily
disabled with pauseMozzi().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 This once more takes over Timer 0, and stops the
Arduino time functions millis(), micros(), delay(), and delayMicroseconds() from
working.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1gaab0d2c840c1aac4bb5f9b8ef5df30f6a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'updateAudio';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '275';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is where you put your audio code.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 updateAudio() has to keep up with the
AUDIO_RATE of 16384 Hz, so to keep things running smoothly, avoid doing any
calculations here which could be done in setup() or updateControl().
@return an audio sample.  In STANDARD mode this is between -244 and 243 inclusive.
In HIFI mode, it's a 14 bit number between -16384 and 16383 inclusive.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga59d187b915b2e366c88489e52801951a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'updateControl';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '284';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is where you put your control code.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 You need updateControl() somewhere in
your sketch, even if it's empty. updateControl() is called at the control rate
you set in startMozzi(). To save processor load, avoid any calculations here
which could be done in setup().
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1ga2fca37b988ab369e2f3c3108c683e59d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'audioHook';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '301';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This is required in Arduino's loop().
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 If there is room in Mozzi's output buffer,
audioHook() calls updateAudio() once and puts the result into the output
buffer.  Also, if \#define USE_AUDIO_INPUT true is in Mozzi/mozzi_config.h,
audioHook() takes care of moving audio input from the input buffer so it can be
accessed with getAudioInput() in your updateAudio() routine.
If other functions are called in loop() along with audioHook(), see if
they can be called less often by moving them into updateControl(), 
to save processing power. Otherwise it may be most efficient to
calculate a block of samples at a time by putting audioHook() in a loop of its
own, rather than calculating only 1 sample for each time your other functions
are called.
\xrefitem todo 9.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__analog_1ga3f15eb8d6694020d170ebcbedb645de7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'getAudioInput';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '320';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
This returns audio input from the input buffer, if 
\#define USE_AUDIO_INPUT true is in the Mozzi/mozzi_config.h file.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Audio input is currently restricted to analog pin 0 (this may change in future).
The audio signal needs to be in the range 0 to 5 volts.  
Circuits and discussions about biasing a signal
in the middle of this range can be found at 
http://electronics.stackexchange.com/questions/14404/dc-biasing-audio-signal 
and
http://interface.khm.de/index.php/lab/experiments/arduino-realtime-audio-processing/ .
A circuit and instructions for amplifying and biasing a microphone signal can be found at
http://www.instructables.com/id/Arduino-Audio-Input/?ALLSTEPS
@return audio data from the input buffer
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__core_1gaaa6a42d80c5297407a45ca8bf3c1c7fe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned long
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'mozziMicros';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
      func-mem-desc-line = '332';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A replacement for Arduino micros() which is disabled by Mozzi which takes over
Timer 0 for control interrupts.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
 mozziMicros is updated each time an audio sample
is output, so the resolution is 1/AUDIO_RATE (61 microseconds when AUDIO_RATE is
16384 Hz).
@return the approximate number of microseconds since the program began.
\xrefitem todo 10.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/MozziGuts.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mult16x16_8h';
  file-name = 'mult16x16.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1a11ccdbff9a81473d1847de055d6bb23f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiU16X16to32';
      define-mem-param  = {
        define-mem-def-name = 'longRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"movw %A0, r0 \n\t" \
"mul %B1, %B2 \n\t" \
"movw %C0, r0 \n\t" \
"mul %B2, %A1 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"mul %B1, %A2 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (longRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1abdb6ebd5bb940f37a3226d5e4975c29e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiU16X16toH16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"mov r27, r1 \n\t" \
"mul %B1, %B2 \n\t" \
"movw %A0, r0 \n\t" \
"mul %B2, %A1 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"mul %B1, %A2 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (intRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26" , "r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1acfb2a519df1956838ce0e42e8dbf7431';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiU16X16toH16Round';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"mov r27, r1 \n\t" \
"mul %B1, %B2 \n\t" \
"movw %A0, r0 \n\t" \
"mul %B2, %A1 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"mul %B1, %A2 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"lsl r27 \n\t" \
"adc %A0, r26 \n\t" \
"adc %B0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (intRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26" , "r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '72';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1a424b6b583c883c5aefb2f19ff983e218';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiS16X16to32';
      define-mem-param  = {
        define-mem-def-name = 'longRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"movw %A0, r0 \n\t" \
"muls %B1, %B2 \n\t" \
"movw %C0, r0 \n\t" \
"mulsu %B2, %A1 \n\t" \
"sbc %D0, r26 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"mulsu %B1, %A2 \n\t" \
"sbc %D0, r26 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (longRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '103';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1a7ce2d800b9d9a6f1074c49118079eba4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiS16X16toH16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"mov r27, r1 \n\t" \
"muls %B1, %B2 \n\t" \
"movw %A0, r0 \n\t" \
"mulsu %B2, %A1 \n\t" \
"sbc %B0, r26 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"mulsu %B1, %A2 \n\t" \
"sbc %B0, r26 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (intRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26", "r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '132';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1a7c329adf52f0c8aae5d15d6a9784fc12';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X16to32';
      define-mem-param  = {
        define-mem-def-name = 'longRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"movw %A0, r0 \n\t" \
"mulsu %B1, %B2 \n\t" \
"movw %C0, r0 \n\t" \
"mul %B2, %A1 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"mulsu %B1, %A2 \n\t" \
"sbc %D0, r26 \n\t" \
"add %B0, r0 \n\t" \
"adc %C0, r1 \n\t" \
"adc %D0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (longRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '160';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1a6cf0bcd7d5011dbec0f5c4b282f58cc0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X16toH16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"mov r27, r1 \n\t" \
"mulsu %B1, %B2 \n\t" \
"movw %A0, r0 \n\t" \
"mul %B2, %A1 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"mulsu %B1, %A2 \n\t" \
"sbc %B0, r26 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (intRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26", "r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '187';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x16_8h_1ac41e378a90943c6f1bc75ea11d4a3ffe';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X16toH16Round';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
"mul %A1, %A2 \n\t" \
"mov r27, r1 \n\t" \
"mulsu %B1, %B2 \n\t" \
"movw %A0, r0 \n\t" \
"mul %A1, %B2 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"mulsu %B1, %A2 \n\t" \
"sbc %B0, r26 \n\t" \
"add r27, r0 \n\t" \
"adc %A0, r1 \n\t" \
"adc %B0, r26 \n\t" \
"lsl r27 \n\t" \
"adc %A0, r26 \n\t" \
"adc %B0, r26 \n\t" \
"clr r1 \n\t" \
: \
"=&r" (intRes) \
: \
"a" (intIn1), \
"a" (intIn2) \
: \
"r26", "r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
      define-mem-desc-line = '216';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x16.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mult16x8_8h';
  file-name = 'mult16x8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x8_8h_1a52a524bc92e5794d9ee2f54912784b19';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X8toL16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int16In';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int8In';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"mul %A1, %2 \n\t"\
"movw %A0, r0 \n\t"\
"mulsu %B1, %2 \n\t"\
"add %B0, r0 \n\t"\
"clr r1"\
: \
"=&r" (intRes) \
: \
"a" (int16In), \
"a" (int8In) \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x8_8h_1a182285dbc4528e4c1b8e4c32af8ce0bd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16XConst8toL16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int16In';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int8In';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"ldi r22, %2 \n\t"\
"mul %A1, r22 \n\t"\
"movw %A0, r0 \n\t"\
"mulsu %B1, r22 \n\t"\
"add %B0, r0 \n\t"\
"clr r1 \n\t"\
: \
"=&r" (intRes) \
: \
"a" (int16In), \
"M" (int8In) \
:\
"r22"\
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x8.h';
      define-mem-desc-line = '31';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x8_8h_1a368e616eb14757fb51051f7a014458e6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X8toH16';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int16In';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int8In';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t"\
"mulsu %B1, %A2 \n\t"\
"movw %A0, r0 \n\t"\
"mul %A1, %A2 \n\t"\
"add %A0, r1 \n\t"\
"adc %B0, r26 \n\t"\
"clr r1 \n\t"\
: \
"=&r" (intRes) \
: \
"a" (int16In), \
"a" (int8In) \
:\
"r26"\
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x8.h';
      define-mem-desc-line = '49';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult16x8_8h_1aa408ca405aca03a602840f1bb5ccb4f1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU16X8toH16Round';
      define-mem-param  = {
        define-mem-def-name = 'intRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int16In';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'int8In';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t"\
"mulsu %B1, %A2 \n\t"\
"movw %A0, r0 \n\t"\
"mul %A1, %A2 \n\t"\
"add %A0, r1 \n\t"\
"adc %B0, r26 \n\t"\
"lsl r0 \n\t"\
"adc %A0, r26 \n\t"\
"adc %B0, r26 \n\t"\
"clr r1 \n\t"\
: \
"=&r" (intRes) \
: \
"a" (int16In), \
"a" (int8In) \
:\
"r26"\
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x8.h';
      define-mem-desc-line = '69';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult16x8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'mult32x16_8h';
  file-name = 'mult32x16.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'mult32x16_8h_1a5f29223499105e7eb85e1223ff2cc892';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'MultiSU32X16toH32Round';
      define-mem-param  = {
        define-mem-def-name = 'longRes';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'longIn1';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'intIn2';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
asm volatile ( \
"clr r26 \n\t" \
\
\
"mul  %A1, %A2  \n\t" \
"mov  r27, r1   \n\t" \
\
"mul  %B1, %B2  \n\t" \
"movw %A0, r0   \n\t" \
\
"mulsu %D1, %B2 \n\t" \
"movw  %C0, r0  \n\t" \
\
"mulsu %D1, %A2 \n\t" \
"sbc  %D0, r26  \n\t" \
"add  %B0, r0   \n\t" \
"adc  %C0, r1   \n\t" \
"adc  %D0, r26  \n\t" \
\
\
"mul  %B1, %A2  \n\t" \
"add  r27, r0   \n\t" \
"adc  %A0, r1   \n\t" \
"adc  %B0, r26  \n\t" \
"adc  %C0, r26  \n\t" \
"adc  %D0, r26  \n\t" \
\
"mul  %A1, %B2  \n\t" \
"add  r27, r0   \n\t" \
"adc  %A0, r1   \n\t" \
"adc  %B0, r26  \n\t" \
"adc  %C0, r26  \n\t" \
"adc  %D0, r26  \n\t" \
\
"mul  %C1, %A2  \n\t" \
"adc  %A0, r0   \n\t" \
"adc  %B0, r1   \n\t" \
"adc  %C0, r26  \n\t" \
"adc  %D0, r26  \n\t" \
\
"mul  %C1, %B2  \n\t" \
"adc  %B0, r0   \n\t" \
"adc  %C0, r1   \n\t" \
"adc  %D0, r26  \n\t" \
\
\
"lsl  r27       \n\t" \
"adc  %A0, r26  \n\t" \
"adc  %B0, r26  \n\t" \
"adc  %C0, r26  \n\t" \
"adc  %D0, r26  \n\t" \
\
\
"clr r1 \n\t" \
: \
"=&r" (longRes) \
: \
"a" (longIn1), \
"a" (intIn2) \
: \
"r26","r27" \
)
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult32x16.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/mult32x16.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_oscil_8h';
  file-name = 'Oscil.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_oscil_8h_1ac56378fc562b31f0577239f247bb77de';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OSCIL_F_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_oscil_8h_1a1def188e920ba47ca3f20db2d050197a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OSCIL_F_BITS_AS_MULTIPLIER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
65536
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_oscil_8h_1a31da948e750069ed5a88783a36cb9ec6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'OSCIL_PHMOD_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
      define-mem-desc-line = '48';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Oscil.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_phasor_8h';
  file-name = 'Phasor.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_phasor_8h_1ae01ac7d628f7b096967017f97cb63f06';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PHASOR_MAX_VALUE_UL';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4294967295UL
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
      define-mem-desc-line = '34';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Phasor.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_portamento_8h';
  file-name = 'Portamento.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Portamento.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'primes_8h';
  file-name = 'primes.h';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'primes_8h_1aa7232170f705acf466e73356bb5ba45c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
static const unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/primes.h';
      func-mem-desc-line = '36';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gab6c2b444d462461b82997e04105d0398';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randPrime';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/primes.h';
      func-mem-desc-line = '58';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Generates a random prime number between 0 and the n-1th prime number.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This uses a stored array of primes, which takes about 2.5k of progmem.
@param n the maximum index in the series of primes up to which numbers will be returned.  
The maximum is 1128.
@return random prime number between 0 and n-1th index in the series of primes.
@note This isn't included automatically with mozzi_rand.h, 
because it takes up memory which might be needed for other things.
You need to "#include <primes.h>" separately to mozzi_rand.h.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'group__random_1gaead8db89e2403d5ef7842f894552c629';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'randPrimeUpTo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
unsigned int
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'n';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/primes.h';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Generates a random prime number between 0 and the given input number inclusive.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
This uses a stored array of primes up to 10000, which takes about 2.5k of progmem.
@param n the upper limit of the random prime number to be generated.  
The maximum is 10000.
@return random prime number between 0 and n.
@note This isn't included automatically with mozzi_utils.h, 
because it takes up memory which might be needed for other things.
You need to "#include <primes.h>" separately to mozzi_utils.h.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'primes_8h_1a60b762167ee83036ec00313635876ebd';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static const unsigned int
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'TOP_PRIME_INDEX';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= (sizeof(primes)/2)
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/primes.h';
      var-mem-desc-line = '39';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/primes.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'char2mozzi_8py';
  file-name = 'char2mozzi.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacechar2mozzi_1a61b2b967d3c7374f1f6f5296471cc45c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'char2mozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/char2mozzi.py';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@verbatim 
char2mozzi.py converts raw 8 bit sound data to wavetables for Mozzi.

Usage: char2mozzi.py <infile outfile "tablename" "samplerate">

Using Audacity to prepare raw sound files for converting:

Set your Audacity project sample rate:

For generated waveforms like sine or sawtooth, set the project
rate to the size of the wavetable you wish to create, which must
be a power of two (eg. 8192), and set the selection format
(beneath the editing window) to samples. Then you can generate
and save 1 second of a waveform and it will fit your table
length.

For a recorded audio sample, set the project rate to the
Mozzi AUDIO_RATE (16384 in the current version). 
Samples can be any length, as long as they fit in your Arduino.

Save by exporting with the format set to "Other uncompressed formats",
options set to "RAW(headerless)" and "Encoding 8 bit signed PCM".

Now use the file you just exported, as the "infile" to convert.

Args:
        infile: The file to convert.
        outfile:                The file to save as output.
        tablename:              The name to give the table of converted data in the new file.
        samplerate:             The samplerate the sound was recorded at.  Choose what make sense for you, if it's not a normal recorded sample.
        
\endverbatim  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/char2mozzi.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'chebyshev__int8_8py';
  file-name = 'chebyshev_int8.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacechebyshev__int8_1a5842ca2472120a48abac9d12bd3f73f8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'chebyTable';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/chebyshev_int8.py';
      func-mem-desc-line = '6';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
@verbatim 
Generates chebyshev polynomial curve tables for WaveShaper.

Args:
        outfile:                The file to save as output.
        tablename:              The name to give the table of converted data in the new file.
        tablelength:            Use a power of two.
        curvenum:               The chebyshev polynomial curve number to chebyTable.

Examples:
                chebyTable("~/Desktop/waveshaper_chebyshev_3rd_256_int8.h", "CHEBYSHEV_3RD_256", 256, 3)
                chebyTable("~/Desktop/waveshaper_chebyshev_4th_256_int8.h", "CHEBYSHEV_4TH_256", 256, 4)
                chebyTable("~/Desktop/waveshaper_chebyshev_5th_256_int8.h", "CHEBYSHEV_5TH_256", 256, 5)
                chebyTable("~/Desktop/waveshaper_chebyshev_6th_256_int8.h", "CHEBYSHEV_6TH_256", 256, 6)
        
Resources:
                http://www.obiwannabe.co.uk/html/music/6SS/six-waveshaper.html
                http://mathworld.wolfram.com/ChebyshevPolynomialoftheFirstKind.html
                The first few Chebyshev polynomials of the first kind are
                T_0(x)          =               1
                T_1(x)          =               x
                T_2(x)          =               2x^2-1
                T_3(x)          =               4x^3-3x
                T_4(x)          =               8x^4-8x^2+1
                T_5(x)          =               16x^5-20x^3+5x
                T_6(x)          =               32x^6-48x^4+18x^2-1
                
\endverbatim  
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/chebyshev_int8.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'float2mozzi_8py';
  file-name = 'float2mozzi.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacefloat2mozzi_1ab3585ce6ced72bfd3d2497e93d9614c4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float2mozzi';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi.py';
      func-mem-desc-line = '11';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacefloat2mozzi_1a7a708578a599e6c5c0a7487edea9f775';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
tuple
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'fout';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= open(os.path.expanduser(outfile), "w")
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi.py';
      var-mem-desc-line = '27';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
print values[0]
    print values[len(values)-1]
    print len(values)
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacefloat2mozzi_1ae5bc68ccd470e395c70895816fbc47d8';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
string
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'outstring';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 'const char __attribute__((progmem)) '
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi.py';
      var-mem-desc-line = '38';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
       outstring += str(num) + ", "
@endverbatim
values.fromfile(fin, bytesetad)
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'float2mozzi__uint8_8py';
  file-name = 'float2mozzi_uint8.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacefloat2mozzi__uint8_1a6ec919908e7b23451963c2c355cde68e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'float2mozzi_uint8';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi_uint8.py';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacefloat2mozzi__uint8_1afbf031e2d208adca1f9794f5985789c1';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
tuple
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'fout';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= open(os.path.expanduser(outfile), "w")
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi_uint8.py';
      var-mem-desc-line = '21';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
print values[0]
    print values[len(values)-1]
    print len(values)
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'namespacefloat2mozzi__uint8_1a983f5c79d8af12f0100fc052c8bbab98';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
string
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'outstring';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 'const char __attribute__((progmem)) '
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi_uint8.py';
      var-mem-desc-line = '32';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
@verbatim
       outstring += str(num) + ", "
@endverbatim
values.fromfile(fin, bytesetad)
_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/float2mozzi_uint8.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin1024__int8_8py';
  file-name = 'sin1024_int8.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacesin1024__int8_1a707ae7fcd93169b46d51ba6235858502';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'generate';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin1024_int8.py';
      func-mem-desc-line = '9';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin1024_int8.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin8192__uint8_8py';
  file-name = 'sin8192_uint8.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacesin8192__uint8_1a20373aeb85c8bd1b928c0097514f3a5b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'generate';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin8192_uint8.py';
      func-mem-desc-line = '9';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin8192_uint8.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin__multi__levels__int8_8py';
  file-name = 'sin_multi_levels_int8.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacesin__multi__levels__int8_1a9ac50e02ffabacb7308698b74a505d0f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'generate';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin_multi_levels_int8.py';
      func-mem-desc-line = '8';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/sin_multi_levels_int8.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'table__generator__template_8py';
  file-name = 'table_generator_template.py';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'namespacetable__generator__template_1aea200a1fe03b0de47eeafdf8796c8417';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
def
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'generate';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/table_generator_template.py';
      func-mem-desc-line = '5';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/python/table_generator_template.py';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_r_cpoll_8h';
  file-name = 'RCpoll.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RCpoll.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_recent_average_8h';
  file-name = 'RecentAverage.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/RecentAverage.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_reverb_tank_8h';
  file-name = 'ReverbTank.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/ReverbTank.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_sample_8h';
  file-name = 'Sample.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_sample_8h_1a8eba4424fc276faa39413faf92670505';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAMPLE_F_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      define-mem-desc-line = '35';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_sample_8h_1acb82d9d796d11da458308b170beca908';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAMPLE_F_BITS_AS_MULTIPLIER';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
65536
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = '_sample_8h_1a6fccc0a5a1ba5aab43138c6ca0c4b194';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAMPLE_PHMOD_BITS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Sample.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'abomb16384__int8_8h';
  file-name = 'abomb16384_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'abomb16384__int8_8h_1aaae29e69acec708e11157a5b1e7d28a8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ABOMB_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/abomb16384_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'abomb16384__int8_8h_1a134a2a270dfd96ffbb9ee85bd36ffcbf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ABOMB_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/abomb16384_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'abomb16384__int8_8h_1aa0bb1dbceca399d68769f41c0a3b6329';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/abomb16384_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/abomb16384_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__00__2048__int8_8h';
  file-name = 'bamboo_00_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__00__2048__int8_8h_1a1bb69948f87c3503de6d39d8cb4665d8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_00_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__00__2048__int8_8h_1a7dbcb473b777f5c766ab926c9b483d3e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_00_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__00__2048__int8_8h_1aace24c9c9c16784b6017fca39d8d53f1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__00__4096__int8_8h';
  file-name = 'bamboo_00_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__00__4096__int8_8h_1a629c0946a354fb3136d10ab05bb85a2b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_00_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__00__4096__int8_8h_1a23cb49a1532a4a0c34a80c2f3f2add37';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_00_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__00__4096__int8_8h_1a5bb11154a70415a92a301f6f922beb39';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_00_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__01__2048__int8_8h';
  file-name = 'bamboo_01_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__01__2048__int8_8h_1aa55c2d9838cf2872640063b9bbe7fe91';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_01_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__01__2048__int8_8h_1a7eaf2bad6274c523c7b4092f9931cc6d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_01_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__01__2048__int8_8h_1a712f5b31036d7802bac419cea6678642';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__01__4096__int8_8h';
  file-name = 'bamboo_01_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__01__4096__int8_8h_1a7b146777a52ebf01dcddbe0a5dc26d49';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_01_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__01__4096__int8_8h_1af034c51de17106532eddcc44b4bafeed';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_01_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__01__4096__int8_8h_1a83af28a0df3f1f97b120081fbc3d5382';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_01_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__02__2048__int8_8h';
  file-name = 'bamboo_02_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__02__2048__int8_8h_1aabf3c83fcc70e5d82fa8a1e538b5dc26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_02_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__02__2048__int8_8h_1aa335d0109fcdaec3fd4f1df62dc38e05';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_02_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__02__2048__int8_8h_1a31a2e226ef6eed4a69fa9d30a57b1a55';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__02__4096__int8_8h';
  file-name = 'bamboo_02_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__02__4096__int8_8h_1a7c10f75e899c93fd689fc49e1343bb0d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_02_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__02__4096__int8_8h_1aaaac4f7706c05f9875f13543c8ec56b9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_02_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__02__4096__int8_8h_1a2bb03496223f4a6697ec2d308f4ae702';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_02_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__03__2048__int8_8h';
  file-name = 'bamboo_03_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__03__2048__int8_8h_1ad8c3287ff9810ce534cca3b4dcd14cc8';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_03_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__03__2048__int8_8h_1a5993c707dd6b7f1bc4279c794649056e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_03_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__03__2048__int8_8h_1ac0ae9a67191425347b3b227d8f90b684';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__03__4096__int8_8h';
  file-name = 'bamboo_03_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__03__4096__int8_8h_1a0e67b7ced9eaed73f2dd41a782e5440a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_03_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__03__4096__int8_8h_1a0db509f26e1a69c8dd49f071ee3e692b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_03_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__03__4096__int8_8h_1a757846ae1866c39c915a422d76af95f9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_03_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__04__2048__int8_8h';
  file-name = 'bamboo_04_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__04__2048__int8_8h_1a421991005f1d7acd3dc193d899dc155c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_04_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__04__2048__int8_8h_1a076a4b7c15aa083584b5ee5373ed4d15';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_04_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__04__2048__int8_8h_1ab2ea8f55b676dcf55ff928e3cebe098d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__04__4096__int8_8h';
  file-name = 'bamboo_04_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__04__4096__int8_8h_1a371e20c2266548b47a81c6058f30ecb5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_04_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__04__4096__int8_8h_1ae9e150c4fb29108650d8e58a747ac54b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_04_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__04__4096__int8_8h_1aee0fee17d8e4b3cbf22a0075d1da28c7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_04_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__05__2048__int8_8h';
  file-name = 'bamboo_05_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__05__2048__int8_8h_1a071fd0b9f3bdf219a0a0b92ac5355106';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_05_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__05__2048__int8_8h_1a607a9929f86612db836846bfd5f6660c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_05_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__05__2048__int8_8h_1a0ad14eaf4253de50c860c88fcfe1fdfe';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__05__4096__int8_8h';
  file-name = 'bamboo_05_4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__05__4096__int8_8h_1ad52d4ab5860d40f43730ab2a9aa536ce';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_05_4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__05__4096__int8_8h_1a4d0961d48e34c60891229dd688687d39';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_05_4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__05__4096__int8_8h_1a046988523d014adf1c819899f5d91d1e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_05_4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__06__2048__int8_8h';
  file-name = 'bamboo_06_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__06__2048__int8_8h_1af3f05ab7df5918ea3dc20f28ebe69c6c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_06_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_06_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__06__2048__int8_8h_1acc0d95060adf82d913a91dc7cf1ebf5c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_06_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_06_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__06__2048__int8_8h_1a640eb9b26712ad8ac35f340db5529cdc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_06_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_06_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__07__2048__int8_8h';
  file-name = 'bamboo_07_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__07__2048__int8_8h_1a0fc229e323d110846187d5d9481df164';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_07_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_07_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__07__2048__int8_8h_1abada329562cccb1e0be4515a1c6d4c0c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_07_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_07_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__07__2048__int8_8h_1afa9cfda889824596b53e8671f24f684c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_07_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_07_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__08__2048__int8_8h';
  file-name = 'bamboo_08_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__08__2048__int8_8h_1a615fcc03c4e8795a2f29db8f181f4271';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_08_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_08_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__08__2048__int8_8h_1a1b42553382e15fa7dfdf4e42f4559c95';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_08_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_08_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__08__2048__int8_8h_1a8e609a42d324541024de4e8a394aa40a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_08_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_08_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__09__2048__int8_8h';
  file-name = 'bamboo_09_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__09__2048__int8_8h_1ac85fd99e6bb92ebd8fe5c4bc6cb29535';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_09_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_09_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__09__2048__int8_8h_1af41dcd6a161e3851aed85e36fe6bc21c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_09_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_09_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__09__2048__int8_8h_1a4bd2f7fa853f4501d4aaaf12ce92bd6b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_09_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_09_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'bamboo__10__2048__int8_8h';
  file-name = 'bamboo_10_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__10__2048__int8_8h_1a5f23921b5f600ffddc48c25fcbbfc529';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_10_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_10_2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'bamboo__10__2048__int8_8h_1add99298147eaea1d6062dd26309d2d1f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BAMBOO_10_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_10_2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'bamboo__10__2048__int8_8h_1af1191ae6d18b1d102a529b34100475e4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_10_2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/bamboo/bamboo_10_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'burroughs1__18649__int8_8h';
  file-name = 'burroughs1_18649_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'burroughs1__18649__int8_8h_1ad2fde35de42a90991d51c5dbe1f96756';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BURROUGHS1_18649_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
18649
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/burroughs1_18649_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'burroughs1__18649__int8_8h_1a6929814f024a969fdbdaeedbf4d76cd1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BURROUGHS1_18649_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/burroughs1_18649_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'burroughs1__18649__int8_8h_1a0c76830e9e20b2bb17abe44b0af442e0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/burroughs1_18649_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/samples/burroughs1_18649_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_smooth_8h';
  file-name = 'Smooth.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/Smooth.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_state_variable_8h';
  file-name = 'StateVariable.h';
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = '_state_variable_8h_1a6fc9fcb59c5ae9d9cd6af2c7aa71061f';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'filter_types';
      enum-mem-enum = { enum-name = LOWPASS; };
      enum-mem-enum = { enum-name = BANDPASS; };
      enum-mem-enum = { enum-name = HIGHPASS; };
      enum-mem-enum = { enum-name = NOTCH; };
      enum-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
      enum-mem-desc-line = '43';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
State Variable Filter (approximation of Chamberlin version)
Informed by pseudocode at http://www.musicdsp.org/showone.php?id=23 and http://www.musicdsp.org/showone.php?id=142.
_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_
References : 
Hal Chamberlin, Musical Applications of Microprocessors, 2nd Ed, Hayden Book Company 1985. pp 490-492.
Jon Dattorro, Effect Design Part 1, J. Audio Eng. Soc., Vol 45, No. 9, 1997 September
_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/StateVariable.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'brownnoise8192__int8_8h';
  file-name = 'brownnoise8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'brownnoise8192__int8_8h_1a25368ccc1ac0b1242d7a0fb84cc12a5d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BROWNNOISE8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/brownnoise8192_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'brownnoise8192__int8_8h_1a0a08850a10dee49928b1f1e637c6cef5';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BROWNNOISE8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/brownnoise8192_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'brownnoise8192__int8_8h_1affa17d1748f646f4a1ae0d8e26595e4d';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/brownnoise8192_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/brownnoise8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'chum78__int8_8h';
  file-name = 'chum78_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'chum78__int8_8h_1a3ce1ad06c8ad74f732233c3ba63d9393';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHUM78_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8193
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum78_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'chum78__int8_8h_1abf0c6b3781fdc577ce4f9fa1afad6d14';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHUM78_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum78_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'chum78__int8_8h_1aac01c750460ac0f201ade96f8b239cd9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum78_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum78_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'chum9__int8_8h';
  file-name = 'chum9_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'chum9__int8_8h_1ac2f070f91202e8870093d6512af654b4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHUM9_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum9_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'chum9__int8_8h_1a9e6b5d0502daa37e423b3ef9085a3780';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHUM9_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum9_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'chum9__int8_8h_1a72474b80a315f13976b86d282e297eb6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum9_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/chum9_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos1024__int8_8h';
  file-name = 'cos1024_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos1024__int8_8h_1a1cc9a0d4cd1ceae77e4f17d9b11ce10c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS1024_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos1024_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos1024__int8_8h_1a43744ce64b57376538e46a65763c2f0e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS1024_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos1024_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos1024__int8_8h_1af9df5f118084468f36a246382cd656be';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos1024_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos1024_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos2048__int8_8h';
  file-name = 'cos2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos2048__int8_8h_1a2cc83856d7df6d20280f1e457424614c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos2048__int8_8h_1aae86144860ed8943c89ab53da609f380';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos2048__int8_8h_1a4d8a7df4e9fda788df88db84df7a3ae1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos256__int8_8h';
  file-name = 'cos256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos256__int8_8h_1a3e10813563febab2c7ef3722913c5657';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos256_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos256__int8_8h_1a71b33149e817fd0731bfdf0004c489e6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos256_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos256__int8_8h_1afdb9b79e1507056edab2120617ca69b8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos256_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos4096__int8_8h';
  file-name = 'cos4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos4096__int8_8h_1ad6319789b7a33868609497d84f73d8f2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos4096__int8_8h_1a01821301fb825bbd6f8a2695ecc6e815';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos4096__int8_8h_1adbfb5b3306d102cef601e2bf3d321cba';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos512__int8_8h';
  file-name = 'cos512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos512__int8_8h_1a53ce62ef213e91318cdc41ec7636e0fa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos512_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos512__int8_8h_1af1d42a6a226e184095f1127934f2346a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos512_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos512__int8_8h_1a260f05ca4db93fbec407303caad3dcc7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos512_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cos8192__int8_8h';
  file-name = 'cos8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos8192__int8_8h_1a63e06518e96491b0ec14232ecdcf353d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos8192_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cos8192__int8_8h_1aeedf933186667bf1929ceb2779eaeebd';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COS8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos8192_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cos8192__int8_8h_1ac305d12d49f95f4ae1d8519fc8e59d25';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos8192_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cos8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cosphase2048__int8_8h';
  file-name = 'cosphase2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase2048__int8_8h_1ac9a441998cad32403d781cfe9d80cf56';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase2048_int8.h';
      define-mem-desc-line = '16';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Cosine wave, out-of-phase so it starts at 127, cycles to -128 and ends at 127.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_
The number of entries in the table.
_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase2048__int8_8h_1ae6bbf04862cd9ec1b10a5441133e5186';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase2048_int8.h';
      define-mem-desc-line = '20';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A samplerate attribute which is useful for sample tables.
_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cosphase2048__int8_8h_1a6ebdc1e4dd0c424208625a17f349a112';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase2048_int8.h';
      func-mem-desc-line = '24';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
The table data, stored in progmem.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cosphase256__int8_8h';
  file-name = 'cosphase256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase256__int8_8h_1a4f816caf3c8149f37193c3945a5614c1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase256__int8_8h_1a0a7840b04607aba3f8ff98e55c6c4ba6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase256_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cosphase256__int8_8h_1a442a1e2675ace50725dc2abb674452a3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase256_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'cosphase8192__int8_8h';
  file-name = 'cosphase8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase8192__int8_8h_1a51c95618b49b568821a05a56aea73f8d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase8192_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'cosphase8192__int8_8h_1aa8d65ba2a3bb6f6035937fe5f6869fc6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'COSPHASE8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase8192_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'cosphase8192__int8_8h_1a5452ea26a8dd9788cca9e6185979270b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase8192_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/cosphase8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'envelop2048__uint8_8h';
  file-name = 'envelop2048_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'envelop2048__uint8_8h_1a38882787ae774b06b2cf8e356adad94f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ENVELOP2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/envelop2048_uint8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'envelop2048__uint8_8h_1a61bb557a42235168283ed67698afa3e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'ENVELOP2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/envelop2048_uint8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'envelop2048__uint8_8h_1a2172bd9507dc0d37e6c805f5a2117049';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/envelop2048_uint8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/envelop2048_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'halfsin256__uint8_8h';
  file-name = 'halfsin256_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'halfsin256__uint8_8h_1a0b4f9d2d5ec2c8c2239afec166e2e8bc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HALFSIN256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsin256_uint8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'halfsin256__uint8_8h_1a91ee5a59bb2eefbde6e1ad51a5b97f85';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HALFSIN256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsin256_uint8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'halfsin256__uint8_8h_1a27db502dbf2fc5a851a47b5209ebaab1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsin256_uint8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsin256_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'halfsinwindow512__uint8_8h';
  file-name = 'halfsinwindow512_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'halfsinwindow512__uint8_8h_1ac1d1a9c61a04f69277296ffc36a89fb6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HALFSINWINDOW512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsinwindow512_uint8.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'halfsinwindow512__uint8_8h_1a8a7e63144d42f5ef073016ecf4d76428';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'HALFSINWINDOW512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsinwindow512_uint8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'halfsinwindow512__uint8_8h_1a3d2ff0aa3fd639695315829e2a20d5c5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsinwindow512_uint8.h';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/halfsinwindow512_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'noise__static__1__16384__int8_8h';
  file-name = 'noise_static_1_16384_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'noise__static__1__16384__int8_8h_1af47820c24b03694f82cf2439b17cd296';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NOISE_STATIC_1_16384_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/noise_static_1_16384_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'noise__static__1__16384__int8_8h_1add156eaf787603e4f47900693bf5e6ec';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'NOISE_STATIC_1_16384_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
16384
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/noise_static_1_16384_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'noise__static__1__16384__int8_8h_1a68b8f56ffb0873a59756474fe5fb8ec1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/noise_static_1_16384_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/noise_static_1_16384_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'phasor256__int8_8h';
  file-name = 'phasor256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'phasor256__int8_8h_1a35dc2f87b7ec89af56be170f4c7b8fae';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PHASOR256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/phasor256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'phasor256__int8_8h_1aa1039ae58d22772c6cfc850384b26f34';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PHASOR256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/phasor256_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'phasor256__int8_8h_1a3ab8e4ebb95fa74c1837b91fadbf2403';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/phasor256_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/phasor256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'pinknoise8192__int8_8h';
  file-name = 'pinknoise8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pinknoise8192__int8_8h_1a451e680ec72ed0262a43716a48739caf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PINKNOISE8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/pinknoise8192_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'pinknoise8192__int8_8h_1abac3f85a0e3602887b57a952e4d7d9d9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'PINKNOISE8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/pinknoise8192_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'pinknoise8192__int8_8h_1a3a0a280cd2a283b187dabe27a2ab9c2f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/pinknoise8192_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/pinknoise8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw1024__int8_8h';
  file-name = 'saw1024_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw1024__int8_8h_1a8f20bcd37b911edaf99053075fca9daa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW1024_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw1024_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw1024__int8_8h_1ac6dd58b3e37999eac0e3f81e1675a321';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW1024_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw1024_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw1024__int8_8h_1a4a04dbb323f12b58b174c9ec47caf216';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw1024_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw1024_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw2048__int8_8h';
  file-name = 'saw2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw2048__int8_8h_1aff46751cb267881bf250e3dce5badd55';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw2048__int8_8h_1a45524f17aedba3c4054a2543ef4ad0e6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw2048__int8_8h_1a8e66d8e60e93d20c75f741d2832e44a4';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw256__int8_8h';
  file-name = 'saw256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw256__int8_8h_1aa44ef0c2d1fb58f4f9e0970001d33f80';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw256_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw256__int8_8h_1a3cb59c10ded5858af80a983665899b11';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw256_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw256__int8_8h_1a1c726507437de79991b35d0227c18e62';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw256_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw4096__int8_8h';
  file-name = 'saw4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw4096__int8_8h_1aff07b06be49efe63f93673dfee64114a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw4096__int8_8h_1ac96ab017271670a91c647ffddfca4069';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw4096__int8_8h_1a9f6bc5a0ced8f8de1f54238d80f7dfa0';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw512__int8_8h';
  file-name = 'saw512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw512__int8_8h_1af12ff62825de3f53ac9b9426f58511d7';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw512_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw512__int8_8h_1a418575ae87a9cc017363b8352ef712f6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw512_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw512__int8_8h_1a7f4b2f53887f2ff050fcfbc679089c05';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw512_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw8192__int8_8h';
  file-name = 'saw8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw8192__int8_8h_1a15cefc927358b5706e934dc2d7501aaa';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw8192_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw8192__int8_8h_1aa344e2f053182ccb388b3e98b52edd8a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw8192_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw8192__int8_8h_1ad1bd8bb752cbd0063e95d4345dba0ad6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw8192_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'saw__analogue512__int8_8h';
  file-name = 'saw_analogue512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw__analogue512__int8_8h_1ade2a0d567fd834dde1fd2800373d9164';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW_ANALOGUE512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw_analogue512_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'saw__analogue512__int8_8h_1a7af03c329978581d2383303c4b0c82af';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SAW_ANALOGUE512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw_analogue512_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'saw__analogue512__int8_8h_1ac05eb657dfbd948bcf55e1e18683994c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw_analogue512_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/saw_analogue512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin1024__int8_8h';
  file-name = 'sin1024_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin1024__int8_8h_1a0b0951563c3b5f792b3a0f1f917aa25b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN1024_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_int8.h';
      define-mem-desc-line = '17';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin1024__int8_8h_1a0849da9a001336d212e4e1184044ad97';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN1024_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_int8.h';
      define-mem-desc-line = '18';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin1024__int8_8h_1ab5a0cd8932e66415eacab54611758f4b';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_int8.h';
      func-mem-desc-line = '20';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin1024__uint8_8h';
  file-name = 'sin1024_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin1024__uint8_8h_1a5687e7c5aa02f3e6bf8930da87a3ac4e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sin1024_uint_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_uint8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin1024__uint8_8h_1a38d742770307665cd35ef6c2c2917cdb';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sin1024_uint_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_uint8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin1024__uint8_8h_1a0cb1a11fdd28173c3d9f2ccb5bc422f9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_uint8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin1024_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin2048__int8_8h';
  file-name = 'sin2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin2048__int8_8h_1a1151e8e06d9bdff0bf0656ff814554f3';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin2048__int8_8h_1a5b95e98a5d027c322ae6c5d07ec6dc9d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin2048__int8_8h_1a6b42b022ad69d4a79ff9b75f377aa5cf';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin256__int8_8h';
  file-name = 'sin256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin256__int8_8h_1aab95551b46f453309e70d86aa54258e1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin256_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin256__int8_8h_1af3f86e48ff843534dfa5d0ade0d640e9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin256_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin256__int8_8h_1a16882c312910fc3a1889c3e85bbda42a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin256_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin4096__int8_8h';
  file-name = 'sin4096_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin4096__int8_8h_1aa9fcaca57a1ddc406e3f7ca0b521efcc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN4096_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin4096_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin4096__int8_8h_1ae3ad9e9920e9796831f56c36f7ba4e56';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN4096_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4096
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin4096_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin4096__int8_8h_1a0e5d5a33cda05ce3ad49bfe1611e97a6';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin4096_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin4096_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin512__int8_8h';
  file-name = 'sin512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin512__int8_8h_1a55cf274124fe0675993773001d27f715';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin512_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin512__int8_8h_1a58891dba49a3a942044783714115f53a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin512_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin512__int8_8h_1a2d06c25185948f3c3e05abb3ea298077';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin512_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin8192__int8_8h';
  file-name = 'sin8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin8192__int8_8h_1ab17cb46526724afc7ed987fe9f0646e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin8192__int8_8h_1a2d33df835069a0675718fb914df9b5e1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SIN8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin8192__int8_8h_1a2183545ac43f94dce6d447a4f4ba1752';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'sin8192__uint8_8h';
  file-name = 'sin8192_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin8192__uint8_8h_1adfe4cbda4a50ea36cff60ea665cd9b68';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sin8192_uint_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_uint8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'sin8192__uint8_8h_1a6d2ecb4a4d371fc51a8276cbfa9bff45';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sin8192_uint_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_uint8.h';
      define-mem-desc-line = '13';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'sin8192__uint8_8h_1ad7a90c0d828fff78b863df25a4783b56';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_uint8.h';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
Useful as a gain envelope.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/sin8192_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'smoothsquare8192__int8_8h';
  file-name = 'smoothsquare8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'smoothsquare8192__int8_8h_1a9f5e606d0cf30558deb63f4c9ea6b1a2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SMOOTHSQUARE8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/smoothsquare8192_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'smoothsquare8192__int8_8h_1a418d2a4c6118d4a2e625b94d853e165b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SMOOTHSQUARE8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/smoothsquare8192_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'smoothsquare8192__int8_8h_1aaabfc9b1fdb5a74b9d3a5ded297de16f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/smoothsquare8192_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/smoothsquare8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'square__analogue512__int8_8h';
  file-name = 'square_analogue512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'square__analogue512__int8_8h_1a1c3dd551f0533f1a52f4679cf6e367b4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SQUARE_ANALOGUE512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_analogue512_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'square__analogue512__int8_8h_1aa4a6034821320965946fe5b642b68106';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SQUARE_ANALOGUE512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_analogue512_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'square__analogue512__int8_8h_1a9236f8f8394c2f4cbf9a359d2f015809';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_analogue512_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_analogue512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'square__no__alias512__int8_8h';
  file-name = 'square_no_alias512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'square__no__alias512__int8_8h_1a38c996ea0bff67d5dafdbcfec5d3bc56';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SQUARE_NO_ALIAS512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_no_alias512_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'square__no__alias512__int8_8h_1ae5cc3ded0f0e1a24d451fc01539e7e14';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'SQUARE_NO_ALIAS512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_no_alias512_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'square__no__alias512__int8_8h_1ab65591f7f3dab08ff004d522d2d8792a';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_no_alias512_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/square_no_alias512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle1024__int8_8h';
  file-name = 'triangle1024_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle1024__int8_8h_1a7c28a39a3cfb19b9a263a275ae9e658d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE1024_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle1024_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle1024__int8_8h_1a424da3412d3ce79d6a43712c56561ac0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE1024_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1024
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle1024_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle1024__int8_8h_1a7f88e8dd61a08d21daec83d2529d9a34';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle1024_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle1024_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle2048__int8_8h';
  file-name = 'triangle2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle2048__int8_8h_1a1ec731d7ecae8fb4ab72010933aea9ea';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle2048_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle2048__int8_8h_1a0cf58ed65e1198b69012facab02f4523';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle2048_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle2048__int8_8h_1a57b34c0e50f22728e28087ddb1a347c9';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle2048_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle512__int8_8h';
  file-name = 'triangle512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle512__int8_8h_1ac08e5bf93c03162e9bdd2fddcc338e13';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle512_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle512__int8_8h_1a1b2acb084c1e3db4faa2d714217d2aaf';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle512_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle512__int8_8h_1a2c1a360b10aecac585af3c2589d01541';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle512_int8.h';
      func-mem-desc-line = '14';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__analogue512__int8_8h';
  file-name = 'triangle_analogue512_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__analogue512__int8_8h_1a2d6d82e03b98557fc0e3277bf0f50266';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_ANALOGUE512_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_analogue512_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__analogue512__int8_8h_1af8f14a478343b64ff4b21835396b2ba6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_ANALOGUE512_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_analogue512_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__analogue512__int8_8h_1a86a9f1982edfa06231f542b63c9d3cc5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_analogue512_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_analogue512_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__dist__cubed__2048__int8_8h';
  file-name = 'triangle_dist_cubed_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__dist__cubed__2048__int8_8h_1a94e8efe873dd5285b2c484e6ef6f9868';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_DIST_CUBED_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_cubed_2048_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__dist__cubed__2048__int8_8h_1aadeae7464f728af0795b3805411b1bd1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_DIST_CUBED_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_cubed_2048_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__dist__cubed__2048__int8_8h_1a5eb30ece3cf5a03f9943cf31f5cbb334';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_cubed_2048_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_cubed_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__dist__squared__2048__int8_8h';
  file-name = 'triangle_dist_squared_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__dist__squared__2048__int8_8h_1a204ea5c31fe8d9a1164df115a2ee4a0e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_DIST_SQUARED_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_squared_2048_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__dist__squared__2048__int8_8h_1a510b8f66081f75af29bc514ae9d27fe1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_DIST_SQUARED_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_squared_2048_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__dist__squared__2048__int8_8h_1a1d689ec47e8ac49b05609ac2acd57ccc';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_squared_2048_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_dist_squared_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__hermes__2048__int8_8h';
  file-name = 'triangle_hermes_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__hermes__2048__int8_8h_1a1b588fdd5e36aacb64417f7338a64e4f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_HERMES_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_hermes_2048_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__hermes__2048__int8_8h_1aea4a15a35ce8345460190fc91cd60464';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_HERMES_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_hermes_2048_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__hermes__2048__int8_8h_1ae83da6f15fd670c6e8be1b90d5324a33';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_hermes_2048_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_hermes_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__valve__2048__int8_8h';
  file-name = 'triangle_valve_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__valve__2048__int8_8h_1acd7af0d01415a1dce2c89ef0fd22256f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_VALVE_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2048_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__valve__2048__int8_8h_1a0c49474824dd6b6f157fd52ff73f3d2f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_VALVE_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2048_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__valve__2048__int8_8h_1a71813c3d23b1539f60124e031562bba7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2048_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__valve__2__2048__int8_8h';
  file-name = 'triangle_valve_2_2048_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__valve__2__2048__int8_8h_1a720badae80100f0d998097e946c67259';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_VALVE_2_2048_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2_2048_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__valve__2__2048__int8_8h_1a93fad7cfb31ba7eb1fc45b496beb075f';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_VALVE_2_2048_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2048
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2_2048_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__valve__2__2048__int8_8h_1a58da93bc74824244151e36781f8db0c8';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2_2048_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_valve_2_2048_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'triangle__warm8192__int8_8h';
  file-name = 'triangle_warm8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__warm8192__int8_8h_1a94aa4d266f1139fe4f03848add71bcb6';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_WARM8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_warm8192_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'triangle__warm8192__int8_8h_1a456d9733ea649c168b186a72a333d397';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TRIANGLE_WARM8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_warm8192_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'triangle__warm8192__int8_8h_1a848feaa8b5705ed03b1c0dc3d1c70b22';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_warm8192_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/triangle_warm8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'uphasor256__uint8_8h';
  file-name = 'uphasor256_uint8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'uphasor256__uint8_8h_1aa3cffe495ad6fce9a6638bddc56a48ba';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPHASOR256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/uphasor256_uint8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'uphasor256__uint8_8h_1af530f276ea905a4de9f26b36d8398c6a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'UPHASOR256_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/uphasor256_uint8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'uphasor256__uint8_8h_1a1f1eaa68846b9d3cda627c426aadddd5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/uphasor256_uint8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/uphasor256_uint8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape1__softclip__int8_8h';
  file-name = 'waveshape1_softclip_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape1__softclip__int8_8h_1a5a2589c27493abc06a686d16a1be94c2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE1_SOFTCLIP_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape1_softclip_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape1__softclip__int8_8h_1af85cc81596306ecfa2195c48463d067e';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE1_SOFTCLIP_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape1_softclip_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape1__softclip__int8_8h_1a54d9dac6b425acc56a05e7bc1adda795';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape1_softclip_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape1_softclip_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape2__softerclip__int8_8h';
  file-name = 'waveshape2_softerclip_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape2__softerclip__int8_8h_1ae75afd2644bb7260ed4ef8f7867d6629';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE2_SOFTERCLIP_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape2_softerclip_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape2__softerclip__int8_8h_1a4f77a3761e6c77f1c2fccd58b25aef4d';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE2_SOFTERCLIP_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape2_softerclip_int8.h';
      define-mem-desc-line = '15';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape2__softerclip__int8_8h_1a0ea34b29e9386e9462ada4ebe4abe389';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape2_softerclip_int8.h';
      func-mem-desc-line = '17';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape2_softerclip_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__chebyshev__3rd__256__int8_8h';
  file-name = 'waveshape_chebyshev_3rd_256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__chebyshev__3rd__256__int8_8h_1aca075e4b5d1f1e8aaf70c5212135920a';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHEBYSHEV_3RD_256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_3rd_256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__chebyshev__3rd__256__int8_8h_1a2ff3c79044b4ed0aaddaedb2816f91ff';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_3rd_256_int8.h';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_3rd_256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__chebyshev__4th__256__int8_8h';
  file-name = 'waveshape_chebyshev_4th_256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__chebyshev__4th__256__int8_8h_1ac8e85d612eb209973dd5a0dad4862ef0';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHEBYSHEV_4TH_256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_4th_256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__chebyshev__4th__256__int8_8h_1abfcffdcbb1bb40bccb95183c60428ed7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_4th_256_int8.h';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_4th_256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__chebyshev__5th__256__int8_8h';
  file-name = 'waveshape_chebyshev_5th_256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__chebyshev__5th__256__int8_8h_1aa1e8ff82cf0071b7092be72ae417ef50';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHEBYSHEV_5TH_256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_5th_256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__chebyshev__5th__256__int8_8h_1a3cadf96fd935dc449f3be7608fb22303';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_5th_256_int8.h';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_5th_256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__chebyshev__6th__256__int8_8h';
  file-name = 'waveshape_chebyshev_6th_256_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__chebyshev__6th__256__int8_8h_1a9c07b08c40bc5d25f893c904679dba37';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'CHEBYSHEV_6TH_256_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_6th_256_int8.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__chebyshev__6th__256__int8_8h_1a7b32a7b3597049583f2747a7d69138df';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_6th_256_int8.h';
      func-mem-desc-line = '15';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_chebyshev_6th_256_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__compress__512__to__488__int16_8h';
  file-name = 'waveshape_compress_512_to_488_int16.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__compress__512__to__488__int16_8h_1a06e71713d3f4e642fa59cc695f616831';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE_COMPRESS_512_TO_488_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
512
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_compress_512_to_488_int16.h';
      define-mem-desc-line = '14';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__compress__512__to__488__int16_8h_1a218db9ef341de0a44d775effc95dcc91';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const int
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_compress_512_to_488_int16.h';
      func-mem-desc-line = '16';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_compress_512_to_488_int16.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__sigmoid__int8_8h';
  file-name = 'waveshape_sigmoid_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__sigmoid__int8_8h_1a4781d8e558797b58eccc12d3d8dc52f1';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE_SIGMOID_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_sigmoid_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__sigmoid__int8_8h_1ab503f643246e96541de7a3acff0402c3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_sigmoid_int8.h';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A sigmoid squashing function (sort of like an s-shape or cursive f-shape).
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Useful for waveshaping audio compression/distortion sounds, or emphasising changes in
controls around 0 and making them less sensitive in higher (or lower) ranges.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_sigmoid_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'waveshape__tanh__int8_8h';
  file-name = 'waveshape_tanh_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'waveshape__tanh__int8_8h_1a3e601eae79fee501cb7df226581adc26';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WAVESHAPE_TANH_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
256
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_tanh_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'waveshape__tanh__int8_8h_1a717fb987a901e490743474b71fef3cac';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_tanh_int8.h';
      func-mem-desc-line = '19';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
A tanh squashing function (sort of like an s-shape or cursive f-shape).
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
Useful for waveshaping audio compression/distortion sounds, or emphasising changes in
controls around 0 and making them less sensitive in higher (or lower) ranges.
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/waveshape_tanh_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'whitenoise8192__int8_8h';
  file-name = 'whitenoise8192_int8.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'whitenoise8192__int8_8h_1a6f6d1e2943cbf174e87cb61b3b28f25b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WHITENOISE8192_NUM_CELLS';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/whitenoise8192_int8.h';
      define-mem-desc-line = '11';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'whitenoise8192__int8_8h_1a840781260fe545ec62bee8b8eb0b88e2';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'WHITENOISE8192_SAMPLERATE';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
8192
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/whitenoise8192_int8.h';
      define-mem-desc-line = '12';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'whitenoise8192__int8_8h_1a11ac169f98178547d202b24beb3f0620';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
const char
_EnD_oF_dEf_TeXt_;
      func-mem-name = '__attribute__';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
(progmem)
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/whitenoise8192_int8.h';
      func-mem-desc-line = '18';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
White noise table.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/tables/whitenoise8192_int8.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'twi__nonblock_8cpp';
  file-name = 'twi_nonblock.cpp';
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1af181de038aef868afdc2add729c0bbb5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'initialize_twi_nonblock';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '38';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1adec4b6aa4b5b78eb1be4e5b45edd4658';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_requestFromBlocking';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quantity';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1af903bddac63f885f3182a322eb825439';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_beginTransmission';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '90';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a3502e282ddd534ba143095e0d1e6153f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_send';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '100';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a3aa463df29bfc6f3ef887a53294c2e44';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_endTransmission';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '115';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a1fa89bb0f151e2e194cab9b2ef795ec7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_readFromBlocking';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '137';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
TODO: make non-blocking.
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
blocking versions:
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a2d3c2b5761e61ce7b6da0bf582157e64';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_initiateReadFrom';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '192';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
-------&mdash; non-blocking version -------&mdash;
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
non-blocking functions:
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a024f9a641b67863de23a45cea1a49d35';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_continueReadFrom';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '220';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a1d70026061f6fadd1e3724239b8e5bc2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_readMasterBuffer';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '245';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a59f5035172d7bd0dfa20bd29e15075fb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_writeToBlocking';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wait';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '278';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
-&mdash;end&mdash;&mdash; non-blocking version ----&mdash;&mdash;
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
TODO: make non-blocking 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1ac8f66f76ece44f2726190477727ce01c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_initiateWriteTo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '332';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
--------------&mdash; non-blocking ------&mdash;
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a5443fa2d7cdb3dcca731ffbeb3b025e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_continueWriteTo';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '359';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a19f62ca29970133e675862b58d2f3ac3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_reply';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ack';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '397';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1acf52d6c93df110dee6d402b389e5042e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_stop';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '415';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a7f830793058786f5597ddd1d80b885ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_releaseBus';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '444';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8cpp_1a474f42eedbdc093683fdb4b88be3c48f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-name = 'ISR';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
TWI_vect
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      func-mem-desc-line = '461';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8cpp_1a702a914d930f045d63d2fddc9ffaddfe';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_writeAddress';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      var-mem-desc-line = '24';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8cpp_1ab1f8b6deaee4fb6748f6ba6972d0ffb7';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_writeData';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      var-mem-desc-line = '25';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8cpp_1ac55749f23240fc81b5d7e79155d5f9a6';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_writeLength';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      var-mem-desc-line = '26';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8cpp_1aed5375dc61085765e8750432f3c672f8';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_readAddress';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      var-mem-desc-line = '28';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8cpp_1aba7d6a819d622ac6cc9a147818e9211a';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_readLength';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
      var-mem-desc-line = '30';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.cpp';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = 'twi__nonblock_8h';
  file-name = 'twi_nonblock.h';
    define = {
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1ae70baf5399951da1e7ad45a0ed890832';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'cbi';
      define-mem-param  = {
        define-mem-def-name = 'sfr';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'bit';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_SFR_BYTE(sfr) &= ~_BV(bit))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '27';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1ac4a5536d9bf092116f88b94797ddc882';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'sbi';
      define-mem-param  = {
        define-mem-def-name = 'sfr';
      }; /*        define-mem-def--param */
      define-mem-param  = {
        define-mem-def-name = 'bit';
      }; /*        define-mem-def--param */
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
(_SFR_BYTE(sfr) |= _BV(bit))
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '28';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a3e79c6425e8cc6a0ce853eb49a45e5b9';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_FREQ';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
100000L
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '32';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a18f2336f01cb5b7f479e65ee78020c76';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_BUFFER_LENGTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '36';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a78f8e40420d26b512b064b1902f5d559';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_READY';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
0
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '39';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a170e028f798920121e883edf6cca963c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_PRE_MRX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
1
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '40';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a4e51cef0c946abc25dca6e7edaa1653b';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_MRX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
2
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '41';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1af3bfd9af98c4e29dc9d813b3bf4fa68c';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_PRE_MTX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
3
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '42';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a18bbad08828cae8d1e9fd9b8105e3ebc';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_MTX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
4
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '43';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1a0c36c496c84490bf65979fcc79e5e1b4';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_SRX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
5
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '44';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1afa37d05db1b20f3567371ef9e7bbbc48';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'TWI_STX';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
6
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '45';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    define-member = {
      define-mem-kind = 'define';
      define-mem-id   = 'twi__nonblock_8h_1af7b7dc9a200cb1404c280bd500fd1551';
      define-mem-virt = normal;
      define-mem-prot = public;
      define-mem-name = 'BUFFER_LENGTH';
      define-mem-initializer = <<_EnD_oF_dEf_TeXt_
32
_EnD_oF_dEf_TeXt_;
      define-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      define-mem-desc-line = '58';
      define-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      define-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* define-member */
    };
    func = {
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1af181de038aef868afdc2add729c0bbb5';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'initialize_twi_nonblock';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '71';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a69979f17267b69788d66e195eb20125e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_requestFrom';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'quantity';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '73';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1af903bddac63f885f3182a322eb825439';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_beginTransmission';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '74';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a3502e282ddd534ba143095e0d1e6153f';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_send';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '75';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a3aa463df29bfc6f3ef887a53294c2e44';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twowire_endTransmission';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '76';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a2d3c2b5761e61ce7b6da0bf582157e64';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_initiateReadFrom';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '79';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
non-blocking functions:
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a024f9a641b67863de23a45cea1a49d35';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_continueReadFrom';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '80';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a1d70026061f6fadd1e3724239b8e5bc2';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_readMasterBuffer';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '82';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1ac8f66f76ece44f2726190477727ce01c';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_initiateWriteTo';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '84';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
--------------&mdash; non-blocking ------&mdash;
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a5443fa2d7cdb3dcca731ffbeb3b025e1';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_continueWriteTo';
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '85';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a19f62ca29970133e675862b58d2f3ac3';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_reply';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'ack';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '88';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1acf52d6c93df110dee6d402b389e5042e';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_stop';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '89';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a7f830793058786f5597ddd1d80b885ae';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_releaseBus';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
void
_EnD_oF_dEf_TeXt_;
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '90';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a1fa89bb0f151e2e194cab9b2ef795ec7';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_readFromBlocking';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '93';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
blocking versions:
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    func-member = {
      func-mem-kind = 'function';
      func-mem-id   = 'twi__nonblock_8h_1a59f5035172d7bd0dfa20bd29e15075fb';
      func-mem-virt = normal;
      func-mem-prot = public;
      func-mem-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
      func-mem-name = 'twi_writeToBlocking';
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'address';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t *
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'data';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'length';
      }; /*        func-mem-param--param */
      func-mem-param = {
        func-mem-param-type = <<_EnD_oF_dEf_TeXt_
uint8_t
_EnD_oF_dEf_TeXt_;
        func-mem-param-declname = 'wait';
      }; /*        func-mem-param--param */
      func-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      func-mem-desc-line = '94';
      func-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_
-&mdash;end&mdash;&mdash; non-blocking version ----&mdash;&mdash;
_EnD_oF_dEf_TeXt_;
      func-mem-documentation = <<_EnD_oF_dEf_TeXt_
TODO: make non-blocking 
_EnD_oF_dEf_TeXt_;
    }; /* func-member */
    };
    var = {
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a5df410d6503d33f212a17fc1ce5f85ff';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_state';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '47';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1ace385277fbfd96081c39e5589aa346fa';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_oldstate';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '48';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1ae098ce90275c50714d73963cba0ab10b';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_slarw';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '50';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1ad62181b9ca5c2db2780a9851eb5563eb';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_masterBuffer';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '52';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a77ad70a27251063c79440f9f9e6a5f75';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_masterBufferIndex';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '53';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a9b6577f6231a29ae4777eb7073b84894';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_masterBufferLength';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '54';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a722c88f0152ec36610adc03bf7867dfc';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static volatile uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'twi_error';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '56';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a0cb83978b05410f4f66dc06652376890';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'rxBuffer';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '59';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1abd248783c24e3da04a32aedc87076f6f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'rxBufferIndex';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '60';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1afbd53a44c03b24a3c071ec22bed0bf62';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'rxBufferLength';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '61';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a3d053be0361a28cb71760949c45ba729';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'txAddress';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '63';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a9a15952196561102e577cf468eacd167';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'txBuffer';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '64';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a9ba11498b69d7687df22b8ec5cd81b36';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'txBufferIndex';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '65';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a5272b3ecbadbbe04c6c5bbea8649354f';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'txBufferLength';
      var-mem-initializer = <<_EnD_oF_dEf_TeXt_
= 0
_EnD_oF_dEf_TeXt_;
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '66';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    var-member = {
      var-mem-kind = 'variable';
      var-mem-id   = 'twi__nonblock_8h_1a68adbb00cac1b00ea36b3901056d9ba7';
      var-mem-virt = normal;
      var-mem-prot = public;
      var-mem-type = <<_EnD_oF_dEf_TeXt_
static uint8_t
_EnD_oF_dEf_TeXt_;
      var-mem-name = 'transmitting';
      var-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
      var-mem-desc-line = '68';
      var-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      var-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* var-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/twi_nonblock.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wave_packet_8h';
  file-name = 'WavePacket.h';
    enum = {
    enum-member = {
      enum-mem-kind = 'enum';
      enum-mem-id   = '_wave_packet_8h_1ad28a1b6c64625a10e04b25f75d2e7b51';
      enum-mem-virt = normal;
      enum-mem-prot = public;
      enum-mem-name = 'algorithms';
      enum-mem-enum = { enum-name = SINGLE; };
      enum-mem-enum = { enum-name = DOUBLE; };
      enum-mem-desc-file = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
      enum-mem-desc-line = '37';
      enum-mem-briefdesc =    <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
      enum-mem-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
    }; /* enum-member */
    };
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WavePacket.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
file = {
  file-id   = '_wave_shaper_8h';
  file-name = 'WaveShaper.h';
  file-full-name  = '/Users/timbarrass/Documents/Arduino/libraries/Mozzi/WaveShaper.h';
  file-first-line = '1';
  file-briefdesc  = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
  file-documentation = <<_EnD_oF_dEf_TeXt_

_EnD_oF_dEf_TeXt_;
}; /* file */
